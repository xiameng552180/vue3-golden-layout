{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/**\n * Minifies and unminifies configs by replacing frequent keys\n * and values with one letter substitutes. Config options must\n * retain array position/index, add new options at the end.\n * @internal\n*/\nexport var ConfigMinifier;\n\n(function (ConfigMinifier) {\n  const keys = ['settings', 'hasHeaders', 'constrainDragToContainer', 'selectionEnabled', 'dimensions', 'borderWidth', 'minItemHeight', 'minItemWidth', 'headerHeight', 'dragProxyWidth', 'dragProxyHeight', 'labels', 'close', 'maximise', 'minimise', 'popout', 'content', 'componentType', 'componentState', 'id', 'width', 'type', 'height', 'isClosable', 'title', 'popoutWholeStack', 'openPopouts', 'parentId', 'activeItemIndex', 'reorderEnabled', 'borderGrabWidth' //Maximum 36 entries, do not cross this line!\n  ];\n  const values = [true, false, 'row', 'column', 'stack', 'component', 'close', 'maximise', 'minimise', 'open in new window'];\n\n  function checkInitialise() {\n    if (keys.length > 36) {\n      throw new Error('Too many keys in config minifier map');\n    }\n  }\n\n  ConfigMinifier.checkInitialise = checkInitialise;\n\n  function translateObject(from, minify) {\n    const to = {};\n\n    for (const key in from) {\n      if (from.hasOwnProperty(key)) {\n        // In case something has extended Object prototypes\n        let translatedKey;\n\n        if (minify) {\n          translatedKey = minifyKey(key);\n        } else {\n          translatedKey = unminifyKey(key);\n        }\n\n        const fromValue = from[key];\n        to[translatedKey] = translateValue(fromValue, minify);\n      }\n    }\n\n    return to;\n  }\n\n  ConfigMinifier.translateObject = translateObject;\n\n  function translateArray(from, minify) {\n    const length = from.length;\n    const to = new Array(length);\n\n    for (let i = 0; i < length; i++) {\n      // In original code, array indices were numbers and not translated\n      const fromValue = from[i];\n      to[i] = translateValue(fromValue, minify);\n    }\n\n    return to;\n  }\n\n  function translateValue(from, minify) {\n    if (typeof from === 'object') {\n      if (from === null) {\n        return null;\n      } else {\n        if (Array.isArray(from)) {\n          return translateArray(from, minify);\n        } else {\n          return translateObject(from, minify);\n        }\n      }\n    } else {\n      if (minify) {\n        return minifyValue(from);\n      } else {\n        return unminifyValue(from);\n      }\n    }\n  }\n\n  function minifyKey(value) {\n    /**\n     * If a value actually is a single character, prefix it\n     * with ___ to avoid mistaking it for a minification code\n     */\n    if (typeof value === 'string' && value.length === 1) {\n      return '___' + value;\n    }\n\n    const index = indexOfKey(value);\n    /**\n     * value not found in the dictionary, return it unmodified\n     */\n\n    if (index === -1) {\n      return value;\n      /**\n       * value found in dictionary, return its base36 counterpart\n       */\n    } else {\n      return index.toString(36);\n    }\n  }\n\n  function unminifyKey(key) {\n    /**\n     * value is a single character. Assume that it's a translation\n     * and return the original value from the dictionary\n     */\n    if (key.length === 1) {\n      return keys[parseInt(key, 36)];\n    }\n    /**\n     * value originally was a single character and was prefixed with ___\n     * to avoid mistaking it for a translation. Remove the prefix\n     * and return the original character\n     */\n\n\n    if (key.substr(0, 3) === '___') {\n      return key[3];\n    }\n    /**\n     * value was not minified\n     */\n\n\n    return key;\n  }\n\n  function minifyValue(value) {\n    /**\n     * If a value actually is a single character, prefix it\n     * with ___ to avoid mistaking it for a minification code\n     */\n    if (typeof value === 'string' && value.length === 1) {\n      return '___' + value;\n    }\n\n    const index = indexOfValue(value);\n    /**\n     * value not found in the dictionary, return it unmodified\n     */\n\n    if (index === -1) {\n      return value;\n      /**\n       * value found in dictionary, return its base36 counterpart\n       */\n    } else {\n      return index.toString(36);\n    }\n  }\n\n  function unminifyValue(value) {\n    /**\n     * value is a single character. Assume that it's a translation\n     * and return the original value from the dictionary\n     */\n    if (typeof value === 'string' && value.length === 1) {\n      return values[parseInt(value, 36)];\n    }\n    /**\n     * value originally was a single character and was prefixed with ___\n     * to avoid mistaking it for a translation. Remove the prefix\n     * and return the original character\n     */\n\n\n    if (typeof value === 'string' && value.substr(0, 3) === '___') {\n      return value[3];\n    }\n    /**\n     * value was not minified\n     */\n\n\n    return value;\n  }\n\n  function indexOfKey(key) {\n    for (let i = 0; i < keys.length; i++) {\n      if (keys[i] === key) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  function indexOfValue(value) {\n    for (let i = 0; i < values.length; i++) {\n      if (values[i] === value) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n})(ConfigMinifier || (ConfigMinifier = {}));","map":{"version":3,"mappings":"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","names":["ConfigMinifier","keys","values","checkInitialise","length","Error","translateObject","from","minify","to","key","hasOwnProperty","translatedKey","minifyKey","unminifyKey","fromValue","translateValue","translateArray","Array","i","isArray","minifyValue","unminifyValue","value","index","indexOfKey","toString","parseInt","substr","indexOfValue"],"sourceRoot":"","sources":["../../../../src/ts/utils/config-minifier.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}