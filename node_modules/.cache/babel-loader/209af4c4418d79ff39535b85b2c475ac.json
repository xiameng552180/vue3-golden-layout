{"ast":null,"code":"/** @internal @deprecated To be removed */\nexport class TransitionIndicator {\n  constructor() {\n    this._element = document.createElement('div');\n\n    this._element.classList.add(\"lm_transition_indicator\"\n    /* TransitionIndicator */\n    );\n\n    document.body.appendChild(this._element);\n    this._toElement = null;\n    this._fromDimensions = null;\n    this._totalAnimationDuration = 200;\n    this._animationStartTime = null;\n  }\n\n  destroy() {\n    this._element.remove();\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  transitionElements(fromElement, toElement) {\n    /**\n     * TODO - This is not quite as cool as expected. Review.\n     */\n    return; // this._toElement = toElement;\n    // this._animationStartTime = now();\n    // this._fromDimensions = this._measure(fromElement);\n    // this._fromDimensions.opacity = 0.8;\n    // this._element.show().css(this._fromDimensions);\n    // animFrame(fnBind(this._nextAnimationFrame, this));\n  }\n\n  nextAnimationFrame() {// if (this._toElement === null || this._fromDimensions === null || this._animationStartTime === null) {\n    //     throw new UnexpectedNullError('TINAFTD97115');\n    // } else {\n    //     const toDimensions = this.measure(this._toElement);\n    //     const animationProgress = (now() - this._animationStartTime) / this._totalAnimationDuration;\n    //     const currentFrameStyles = {};\n    //     const cssProperty;\n    //     if (animationProgress >= 1) {\n    //         this._element.style.display = 'none';\n    //         return;\n    //     }\n    //     toDimensions.opacity = 0;\n    //     for (const cssProperty in this._fromDimensions) {\n    //         currentFrameStyles[cssProperty] = this._fromDimensions[cssProperty] +\n    //             (toDimensions[cssProperty] - this._fromDimensions[cssProperty]) *\n    //             animationProgress;\n    //     }\n    //     this._element.css(currentFrameStyles);\n    //     animFrame(fnBind(this._nextAnimationFrame, this));\n    // }\n  }\n\n  measure(element) {\n    const rect = element.getBoundingClientRect();\n    return {\n      left: rect.left,\n      top: rect.top,\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n}","map":{"version":3,"mappings":"AAGA;AACA,OAAM,MAAOA,mBAAP,CAA0B;AAO5BC;AACI,SAAKC,QAAL,GAAgBC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;;AACA,SAAKF,QAAL,CAAcG,SAAd,CAAwBC,GAAxB,CAA2B;AAAA;AAA3B;;AACAH,YAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0B,KAAKN,QAA/B;AAEA,SAAKO,UAAL,GAAkB,IAAlB;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACA,SAAKC,uBAAL,GAA+B,GAA/B;AACA,SAAKC,mBAAL,GAA2B,IAA3B;AACH;;AAEDC,SAAO;AACH,SAAKX,QAAL,CAAcY,MAAd;AACH,GApB2B,CAsB5B;;;AACAC,oBAAkB,CAACC,WAAD,EAA2BC,SAA3B,EAAiD;AAC/D;;;AAGA,WAJ+D,CAK/D;AACA;AACA;AACA;AACA;AACA;AACH;;AAEOC,oBAAkB,IACtB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACH;;AAEOC,SAAO,CAACC,OAAD,EAAqB;AAChC,UAAMC,IAAI,GAAGD,OAAO,CAACE,qBAAR,EAAb;AAEA,WAAO;AACHC,UAAI,EAAEF,IAAI,CAACE,IADR;AAEHC,SAAG,EAAEH,IAAI,CAACG,GAFP;AAGHC,WAAK,EAAEL,OAAO,CAACM,WAHZ;AAIHC,YAAM,EAAEP,OAAO,CAACQ;AAJb,KAAP;AAMH;;AAxE2B","names":["TransitionIndicator","constructor","_element","document","createElement","classList","add","body","appendChild","_toElement","_fromDimensions","_totalAnimationDuration","_animationStartTime","destroy","remove","transitionElements","fromElement","toElement","nextAnimationFrame","measure","element","rect","getBoundingClientRect","left","top","width","offsetWidth","height","offsetHeight"],"sourceRoot":"","sources":["../../../../src/ts/controls/transition-indicator.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}