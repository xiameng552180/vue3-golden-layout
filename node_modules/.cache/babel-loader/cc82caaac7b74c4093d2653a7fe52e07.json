{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { ItemConfig, LayoutConfig } from './config/config';\nimport { ResolvedItemConfig, ResolvedLayoutConfig, ResolvedRootItemConfig } from \"./config/resolved-config\";\nimport { BrowserPopout } from './controls/browser-popout';\nimport { DragProxy } from './controls/drag-proxy';\nimport { DragSource } from './controls/drag-source';\nimport { DropTargetIndicator } from './controls/drop-target-indicator';\nimport { TransitionIndicator } from './controls/transition-indicator';\nimport { ConfigurationError } from './errors/external-error';\nimport { AssertError, UnexpectedNullError, UnexpectedUndefinedError, UnreachableCaseError } from './errors/internal-error';\nimport { ComponentItem } from './items/component-item';\nimport { ContentItem } from './items/content-item';\nimport { GroundItem } from './items/ground-item';\nimport { RowOrColumn } from './items/row-or-column';\nimport { Stack } from './items/stack';\nimport { ConfigMinifier } from './utils/config-minifier';\nimport { EventEmitter } from './utils/event-emitter';\nimport { EventHub } from './utils/event-hub';\nimport { I18nStrings, i18nStrings } from './utils/i18n-strings';\nimport { ItemType, ResponsiveMode } from './utils/types';\nimport { getElementWidthAndHeight, removeFromArray, setElementHeight, setElementWidth } from './utils/utils';\n/**\n * The main class that will be exposed as GoldenLayout.\n */\n\n/** @public */\n\nexport class LayoutManager extends EventEmitter {\n  /**\n  * @param container - A Dom HTML element. Defaults to body\n  * @internal\n  */\n  constructor(parameters) {\n    super();\n    /** @internal */\n\n    this._isFullPage = false;\n    /** @internal */\n\n    this._isInitialised = false;\n    /** @internal */\n\n    this._groundItem = undefined;\n    /** @internal */\n\n    this._openPopouts = [];\n    /** @internal */\n\n    this._dropTargetIndicator = null;\n    /** @internal */\n\n    this._transitionIndicator = null;\n    /** @internal */\n\n    this._itemAreas = [];\n    /** @internal */\n\n    this._maximisePlaceholder = LayoutManager.createMaximisePlaceElement(document);\n    /** @internal */\n\n    this._tabDropPlaceholder = LayoutManager.createTabDropPlaceholderElement(document);\n    /** @internal */\n\n    this._dragSources = [];\n    /** @internal */\n\n    this._updatingColumnsResponsive = false;\n    /** @internal */\n\n    this._firstLoad = true;\n    /** @internal */\n\n    this._eventHub = new EventHub(this);\n    /** @internal */\n\n    this._width = null;\n    /** @internal */\n\n    this._height = null;\n    /** @internal */\n\n    this._virtualSizedContainers = [];\n    /** @internal */\n\n    this._virtualSizedContainerAddingBeginCount = 0;\n    /** @internal */\n\n    this._windowResizeListener = () => this.processResizeWithDebounce();\n    /** @internal */\n\n\n    this._windowUnloadListener = () => this.onUnload();\n    /** @internal */\n\n\n    this._maximisedStackBeforeDestroyedListener = ev => this.cleanupBeforeMaximisedStackDestroyed(ev);\n\n    this.isSubWindow = parameters.isSubWindow;\n    this._constructorOrSubWindowLayoutConfig = parameters.constructorOrSubWindowLayoutConfig;\n    I18nStrings.checkInitialise();\n    ConfigMinifier.checkInitialise();\n\n    if (parameters.containerElement !== undefined) {\n      this._containerElement = parameters.containerElement;\n    }\n  }\n\n  get container() {\n    return this._containerElement;\n  }\n\n  get isInitialised() {\n    return this._isInitialised;\n  }\n  /** @internal */\n\n\n  get groundItem() {\n    return this._groundItem;\n  }\n  /** @internal @deprecated use {@link (LayoutManager:class).groundItem} instead */\n\n\n  get root() {\n    return this._groundItem;\n  }\n\n  get openPopouts() {\n    return this._openPopouts;\n  }\n  /** @internal */\n\n\n  get dropTargetIndicator() {\n    return this._dropTargetIndicator;\n  }\n  /** @internal @deprecated To be removed */\n\n\n  get transitionIndicator() {\n    return this._transitionIndicator;\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get height() {\n    return this._height;\n  }\n  /**\n   * Retrieves the {@link (EventHub:class)} instance associated with this layout manager.\n   * This can be used to propagate events between the windows\n   * @public\n   */\n\n\n  get eventHub() {\n    return this._eventHub;\n  }\n\n  get rootItem() {\n    if (this._groundItem === undefined) {\n      throw new Error('Cannot access rootItem before init');\n    } else {\n      const groundContentItems = this._groundItem.contentItems;\n\n      if (groundContentItems.length === 0) {\n        return undefined;\n      } else {\n        return this._groundItem.contentItems[0];\n      }\n    }\n  }\n\n  get focusedComponentItem() {\n    return this._focusedComponentItem;\n  }\n  /** @internal */\n\n\n  get tabDropPlaceholder() {\n    return this._tabDropPlaceholder;\n  }\n\n  get maximisedStack() {\n    return this._maximisedStack;\n  }\n  /** @deprecated indicates deprecated constructor use */\n\n\n  get deprecatedConstructor() {\n    return !this.isSubWindow && this._constructorOrSubWindowLayoutConfig !== undefined;\n  }\n  /**\n   * Destroys the LayoutManager instance itself as well as every ContentItem\n   * within it. After this is called nothing should be left of the LayoutManager.\n   */\n\n\n  destroy() {\n    if (this._isInitialised) {\n      if (this.layoutConfig.settings.closePopoutsOnUnload === true) {\n        for (let i = 0; i < this._openPopouts.length; i++) {\n          this._openPopouts[i].close();\n        }\n      }\n\n      if (this._isFullPage) {\n        globalThis.removeEventListener('resize', this._windowResizeListener);\n      }\n\n      globalThis.removeEventListener('unload', this._windowUnloadListener);\n      globalThis.removeEventListener('beforeunload', this._windowUnloadListener);\n\n      if (this._groundItem !== undefined) {\n        this._groundItem.destroy();\n      }\n\n      this._tabDropPlaceholder.remove();\n\n      if (this._dropTargetIndicator !== null) {\n        this._dropTargetIndicator.destroy();\n      }\n\n      if (this._transitionIndicator !== null) {\n        this._transitionIndicator.destroy();\n      }\n\n      this._eventHub.destroy();\n\n      for (const dragSource of this._dragSources) {\n        dragSource.destroy();\n      }\n\n      this._dragSources = [];\n      this._isInitialised = false;\n    }\n  }\n  /**\n   * Takes a GoldenLayout configuration object and\n   * replaces its keys and values recursively with\n   * one letter codes\n   * @deprecated use {@link (ResolvedLayoutConfig:namespace).minifyConfig} instead\n   */\n\n\n  minifyConfig(config) {\n    return ResolvedLayoutConfig.minifyConfig(config);\n  }\n  /**\n   * Takes a configuration Object that was previously minified\n   * using minifyConfig and returns its original version\n   * @deprecated use {@link (ResolvedLayoutConfig:namespace).unminifyConfig} instead\n   */\n\n\n  unminifyConfig(config) {\n    return ResolvedLayoutConfig.unminifyConfig(config);\n  }\n  /**\n   * Called from GoldenLayout class. Finishes of init\n   * @internal\n   */\n\n\n  init() {\n    this.setContainer();\n    this._dropTargetIndicator = new DropTargetIndicator();\n    this._transitionIndicator = new TransitionIndicator();\n    this.updateSizeFromContainer();\n    let subWindowRootConfig;\n\n    if (this.isSubWindow) {\n      if (this._constructorOrSubWindowLayoutConfig === undefined) {\n        // SubWindow LayoutConfig should have been generated by constructor\n        throw new UnexpectedUndefinedError('LMIU07155');\n      } else {\n        if (ItemConfig.isComponent(this._constructorOrSubWindowLayoutConfig.root)) {\n          subWindowRootConfig = this._constructorOrSubWindowLayoutConfig.root;\n        } else {\n          // SubWindow LayoutConfig must have Component as Root\n          throw new AssertError('LMIC07155');\n        }\n\n        const resolvedLayoutConfig = LayoutConfig.resolve(this._constructorOrSubWindowLayoutConfig); // remove root from layoutConfig\n\n        this.layoutConfig = Object.assign(Object.assign({}, resolvedLayoutConfig), {\n          root: undefined\n        });\n      }\n    } else {\n      if (this._constructorOrSubWindowLayoutConfig === undefined) {\n        this.layoutConfig = ResolvedLayoutConfig.createDefault(); // will overwritten be loaded via loadLayout\n      } else {\n        // backwards compatibility\n        this.layoutConfig = LayoutConfig.resolve(this._constructorOrSubWindowLayoutConfig);\n      }\n    }\n\n    const layoutConfig = this.layoutConfig;\n    this._groundItem = new GroundItem(this, layoutConfig.root, this._containerElement);\n\n    this._groundItem.init();\n\n    this.checkLoadedLayoutMaximiseItem();\n    this.bindEvents();\n    this._isInitialised = true;\n    this.adjustColumnsResponsive();\n    this.emit('initialised');\n\n    if (subWindowRootConfig !== undefined) {\n      // must be SubWindow\n      this.loadComponentAsRoot(subWindowRootConfig);\n    }\n  }\n  /**\n   * Loads a new layout\n   * @param layoutConfig - New layout to be loaded\n   */\n\n\n  loadLayout(layoutConfig) {\n    if (!this.isInitialised) {\n      // In case application not correctly using legacy constructor\n      throw new Error('GoldenLayout: Need to call init() if LayoutConfig with defined root passed to constructor');\n    } else {\n      if (this._groundItem === undefined) {\n        throw new UnexpectedUndefinedError('LMLL11119');\n      } else {\n        this.createSubWindows(); // still needs to be tested\n\n        this.layoutConfig = LayoutConfig.resolve(layoutConfig);\n\n        this._groundItem.loadRoot(this.layoutConfig.root);\n\n        this.checkLoadedLayoutMaximiseItem();\n        this.adjustColumnsResponsive();\n      }\n    }\n  }\n  /**\n   * Creates a layout configuration object based on the the current state\n   *\n   * @public\n   * @returns GoldenLayout configuration\n   */\n\n\n  saveLayout() {\n    if (this._isInitialised === false) {\n      throw new Error('Can\\'t create config, layout not yet initialised');\n    } else {\n      // if (root !== undefined && !(root instanceof ContentItem)) {\n      //     throw new Error('Root must be a ContentItem');\n      // }\n\n      /*\n      * Content\n      */\n      if (this._groundItem === undefined) {\n        throw new UnexpectedUndefinedError('LMTC18244');\n      } else {\n        const groundContent = this._groundItem.calculateConfigContent();\n\n        let rootItemConfig;\n\n        if (groundContent.length !== 1) {\n          rootItemConfig = undefined;\n        } else {\n          rootItemConfig = groundContent[0];\n        }\n        /*\n        * Retrieve config for subwindows\n        */\n\n\n        this.reconcilePopoutWindows();\n        const openPopouts = [];\n\n        for (let i = 0; i < this._openPopouts.length; i++) {\n          openPopouts.push(this._openPopouts[i].toConfig());\n        }\n\n        const config = {\n          root: rootItemConfig,\n          openPopouts,\n          settings: ResolvedLayoutConfig.Settings.createCopy(this.layoutConfig.settings),\n          dimensions: ResolvedLayoutConfig.Dimensions.createCopy(this.layoutConfig.dimensions),\n          header: ResolvedLayoutConfig.Header.createCopy(this.layoutConfig.header),\n          resolved: true\n        };\n        return config;\n      }\n    }\n  }\n  /**\n   * Removes any existing layout. Effectively, an empty layout will be loaded.\n   */\n\n\n  clear() {\n    if (this._groundItem === undefined) {\n      throw new UnexpectedUndefinedError('LMCL11129');\n    } else {\n      this._groundItem.clearRoot();\n    }\n  }\n  /**\n   * @deprecated Use {@link (LayoutManager:class).saveLayout}\n   */\n\n\n  toConfig() {\n    return this.saveLayout();\n  }\n  /**\n   * Adds a new ComponentItem.  Will use default location selectors to ensure a location is found and\n   * component is successfully added\n   * @param componentTypeName - Name of component type to be created.\n   * @param state - Optional initial state to be assigned to component\n   * @returns New ComponentItem created.\n   */\n\n\n  newComponent(componentType, componentState, title) {\n    const componentItem = this.newComponentAtLocation(componentType, componentState, title);\n\n    if (componentItem === undefined) {\n      throw new AssertError('LMNC65588');\n    } else {\n      return componentItem;\n    }\n  }\n  /**\n   * Adds a ComponentItem at the first valid selector location.\n   * @param componentTypeName - Name of component type to be created.\n   * @param state - Optional initial state to be assigned to component\n   * @param locationSelectors - Array of location selectors used to find location in layout where component\n   * will be added. First location in array which is valid will be used. If locationSelectors is undefined,\n   * {@link (LayoutManager:namespace).defaultLocationSelectors} will be used\n   * @returns New ComponentItem created or undefined if no valid location selector was in array.\n   */\n\n\n  newComponentAtLocation(componentType, componentState, title, locationSelectors) {\n    if (this._groundItem === undefined) {\n      throw new Error('Cannot add component before init');\n    } else {\n      const location = this.addComponentAtLocation(componentType, componentState, title, locationSelectors);\n\n      if (location === undefined) {\n        return undefined;\n      } else {\n        const createdItem = location.parentItem.contentItems[location.index];\n\n        if (!ContentItem.isComponentItem(createdItem)) {\n          throw new AssertError('LMNC992877533');\n        } else {\n          return createdItem;\n        }\n      }\n    }\n  }\n  /**\n   * Adds a new ComponentItem.  Will use default location selectors to ensure a location is found and\n   * component is successfully added\n   * @param componentType - Type of component to be created.\n   * @param state - Optional initial state to be assigned to component\n   * @returns Location of new ComponentItem created.\n   */\n\n\n  addComponent(componentType, componentState, title) {\n    const location = this.addComponentAtLocation(componentType, componentState, title);\n\n    if (location === undefined) {\n      throw new AssertError('LMAC99943');\n    } else {\n      return location;\n    }\n  }\n  /**\n   * Adds a ComponentItem at the first valid selector location.\n   * @param componentType - Type of component to be created.\n   * @param state - Optional initial state to be assigned to component\n   * @param locationSelectors - Array of location selectors used to find determine location in layout where component\n   * will be added. First location in array which is valid will be used. If undefined,\n   * {@link (LayoutManager:namespace).defaultLocationSelectors} will be used.\n   * @returns Location of new ComponentItem created or undefined if no valid location selector was in array.\n   */\n\n\n  addComponentAtLocation(componentType, componentState, title, locationSelectors) {\n    const itemConfig = {\n      type: 'component',\n      componentType,\n      componentState,\n      title\n    };\n    return this.addItemAtLocation(itemConfig, locationSelectors);\n  }\n  /**\n   * Adds a new ContentItem.  Will use default location selectors to ensure a location is found and\n   * component is successfully added\n   * @param itemConfig - ResolvedItemConfig of child to be added.\n   * @returns New ContentItem created.\n  */\n\n\n  newItem(itemConfig) {\n    const contentItem = this.newItemAtLocation(itemConfig);\n\n    if (contentItem === undefined) {\n      throw new AssertError('LMNC65588');\n    } else {\n      return contentItem;\n    }\n  }\n  /**\n   * Adds a new child ContentItem under the root ContentItem.  If a root does not exist, then create root ContentItem instead\n   * @param itemConfig - ResolvedItemConfig of child to be added.\n   * @param locationSelectors - Array of location selectors used to find determine location in layout where ContentItem\n   * will be added. First location in array which is valid will be used. If undefined,\n   * {@link (LayoutManager:namespace).defaultLocationSelectors} will be used.\n   * @returns New ContentItem created or undefined if no valid location selector was in array. */\n\n\n  newItemAtLocation(itemConfig, locationSelectors) {\n    if (this._groundItem === undefined) {\n      throw new Error('Cannot add component before init');\n    } else {\n      const location = this.addItemAtLocation(itemConfig, locationSelectors);\n\n      if (location === undefined) {\n        return undefined;\n      } else {\n        const createdItem = location.parentItem.contentItems[location.index];\n        return createdItem;\n      }\n    }\n  }\n  /**\n   * Adds a new ContentItem.  Will use default location selectors to ensure a location is found and\n   * component is successfully added.\n   * @param itemConfig - ResolvedItemConfig of child to be added.\n   * @returns Location of new ContentItem created. */\n\n\n  addItem(itemConfig) {\n    const location = this.addItemAtLocation(itemConfig);\n\n    if (location === undefined) {\n      throw new AssertError('LMAI99943');\n    } else {\n      return location;\n    }\n  }\n  /**\n   * Adds a ContentItem at the first valid selector location.\n   * @param itemConfig - ResolvedItemConfig of child to be added.\n   * @param locationSelectors - Array of location selectors used to find determine location in layout where ContentItem\n   * will be added. First location in array which is valid will be used. If undefined,\n   * {@link (LayoutManager:namespace).defaultLocationSelectors} will be used.\n   * @returns Location of new ContentItem created or undefined if no valid location selector was in array. */\n\n\n  addItemAtLocation(itemConfig, locationSelectors) {\n    if (this._groundItem === undefined) {\n      throw new Error('Cannot add component before init');\n    } else {\n      if (locationSelectors === undefined) {\n        // defaultLocationSelectors should always find a location\n        locationSelectors = LayoutManager.defaultLocationSelectors;\n      }\n\n      const location = this.findFirstLocation(locationSelectors);\n\n      if (location === undefined) {\n        return undefined;\n      } else {\n        let parentItem = location.parentItem;\n        let addIdx;\n\n        switch (parentItem.type) {\n          case ItemType.ground:\n            {\n              const groundItem = parentItem;\n              addIdx = groundItem.addItem(itemConfig, location.index);\n\n              if (addIdx >= 0) {\n                parentItem = this._groundItem.contentItems[0]; // was added to rootItem\n              } else {\n                addIdx = 0; // was added as rootItem (which is the first and only ContentItem in GroundItem)\n              }\n\n              break;\n            }\n\n          case ItemType.row:\n          case ItemType.column:\n            {\n              const rowOrColumn = parentItem;\n              addIdx = rowOrColumn.addItem(itemConfig, location.index);\n              break;\n            }\n\n          case ItemType.stack:\n            {\n              if (!ItemConfig.isComponent(itemConfig)) {\n                throw Error(i18nStrings[6\n                /* ItemConfigIsNotTypeComponent */\n                ]);\n              } else {\n                const stack = parentItem;\n                addIdx = stack.addItem(itemConfig, location.index);\n                break;\n              }\n            }\n\n          case ItemType.component:\n            {\n              throw new AssertError('LMAIALC87444602');\n            }\n\n          default:\n            throw new UnreachableCaseError('LMAIALU98881733', parentItem.type);\n        }\n\n        if (ItemConfig.isComponent(itemConfig)) {\n          // see if stack was inserted\n          const item = parentItem.contentItems[addIdx];\n\n          if (ContentItem.isStack(item)) {\n            parentItem = item;\n            addIdx = 0;\n          }\n        }\n\n        location.parentItem = parentItem;\n        location.index = addIdx;\n        return location;\n      }\n    }\n  }\n  /** Loads the specified component ResolvedItemConfig as root.\n   * This can be used to display a Component all by itself.  The layout cannot be changed other than having another new layout loaded.\n   * Note that, if this layout is saved and reloaded, it will reload with the Component as a child of a Stack.\n  */\n\n\n  loadComponentAsRoot(itemConfig) {\n    if (this._groundItem === undefined) {\n      throw new Error('Cannot add item before init');\n    } else {\n      this._groundItem.loadComponentAsRoot(itemConfig);\n    }\n  }\n  /** @deprecated Use {@link (LayoutManager:class).setSize} */\n\n\n  updateSize(width, height) {\n    this.setSize(width, height);\n  }\n  /**\n   * Updates the layout managers size\n   *\n   * @param width - Width in pixels\n   * @param height - Height in pixels\n   */\n\n\n  setSize(width, height) {\n    this._width = width;\n    this._height = height;\n\n    if (this._isInitialised === true) {\n      if (this._groundItem === undefined) {\n        throw new UnexpectedUndefinedError('LMUS18881');\n      } else {\n        this._groundItem.setSize(this._width, this._height);\n\n        if (this._maximisedStack) {\n          const {\n            width,\n            height\n          } = getElementWidthAndHeight(this._containerElement);\n          setElementWidth(this._maximisedStack.element, width);\n          setElementHeight(this._maximisedStack.element, height);\n\n          this._maximisedStack.updateSize();\n        }\n\n        this.adjustColumnsResponsive();\n      }\n    }\n  }\n  /** @internal */\n\n\n  updateSizeFromContainer() {\n    const {\n      width,\n      height\n    } = getElementWidthAndHeight(this._containerElement);\n    this.setSize(width, height);\n  }\n  /**\n   * Update the size of the root ContentItem.  This will update the size of all contentItems in the tree\n   */\n\n\n  updateRootSize() {\n    if (this._groundItem === undefined) {\n      throw new UnexpectedUndefinedError('LMURS28881');\n    } else {\n      this._groundItem.updateSize();\n    }\n  }\n  /** @public */\n\n\n  createAndInitContentItem(config, parent) {\n    const newItem = this.createContentItem(config, parent);\n    newItem.init();\n    return newItem;\n  }\n  /**\n   * Recursively creates new item tree structures based on a provided\n   * ItemConfiguration object\n   *\n   * @param config - ResolvedItemConfig\n   * @param parent - The item the newly created item should be a child of\n   * @internal\n   */\n\n\n  createContentItem(config, parent) {\n    if (typeof config.type !== 'string') {\n      throw new ConfigurationError('Missing parameter \\'type\\'', JSON.stringify(config));\n    }\n    /**\n     * We add an additional stack around every component that's not within a stack anyways.\n     */\n\n\n    if ( // If this is a component\n    ResolvedItemConfig.isComponentItem(config) && // and it's not already within a stack\n    !(parent instanceof Stack) && // and we have a parent\n    !!parent && // and it's not the topmost item in a new window\n    !(this.isSubWindow === true && parent instanceof GroundItem)) {\n      const stackConfig = {\n        type: ItemType.stack,\n        content: [config],\n        width: config.width,\n        minWidth: config.minWidth,\n        height: config.height,\n        minHeight: config.minHeight,\n        id: config.id,\n        maximised: config.maximised,\n        isClosable: config.isClosable,\n        activeItemIndex: 0,\n        header: undefined\n      };\n      config = stackConfig;\n    }\n\n    const contentItem = this.createContentItemFromConfig(config, parent);\n    return contentItem;\n  }\n\n  findFirstComponentItemById(id) {\n    if (this._groundItem === undefined) {\n      throw new UnexpectedUndefinedError('LMFFCIBI82446');\n    } else {\n      return this.findFirstContentItemTypeByIdRecursive(ItemType.component, id, this._groundItem);\n    }\n  }\n  /**\n   * Creates a popout window with the specified content at the specified position\n   *\n   * @param itemConfigOrContentItem - The content of the popout window's layout manager derived from either\n   * a {@link (ContentItem:class)} or {@link (ItemConfig:interface)} or ResolvedItemConfig content (array of {@link (ItemConfig:interface)})\n   * @param positionAndSize - The width, height, left and top of Popout window\n   * @param parentId -The id of the element this item will be appended to when popIn is called\n   * @param indexInParent - The position of this item within its parent element\n   */\n\n\n  createPopout(itemConfigOrContentItem, positionAndSize, parentId, indexInParent) {\n    if (itemConfigOrContentItem instanceof ContentItem) {\n      return this.createPopoutFromContentItem(itemConfigOrContentItem, positionAndSize, parentId, indexInParent);\n    } else {\n      return this.createPopoutFromItemConfig(itemConfigOrContentItem, positionAndSize, parentId, indexInParent);\n    }\n  }\n  /** @internal */\n\n\n  createPopoutFromContentItem(item, window, parentId, indexInParent) {\n    /**\n     * If the item is the only component within a stack or for some\n     * other reason the only child of its parent the parent will be destroyed\n     * when the child is removed.\n     *\n     * In order to support this we move up the tree until we find something\n     * that will remain after the item is being popped out\n     */\n    let parent = item.parent;\n    let child = item;\n\n    while (parent !== null && parent.contentItems.length === 1 && !parent.isGround) {\n      child = parent;\n      parent = parent.parent;\n    }\n\n    if (parent === null) {\n      throw new UnexpectedNullError('LMCPFCI00834');\n    } else {\n      if (indexInParent === undefined) {\n        indexInParent = parent.contentItems.indexOf(child);\n      }\n\n      if (parentId !== null) {\n        parent.addPopInParentId(parentId);\n      }\n\n      if (window === undefined) {\n        const windowLeft = globalThis.screenX || globalThis.screenLeft;\n        const windowTop = globalThis.screenY || globalThis.screenTop;\n        const offsetLeft = item.element.offsetLeft;\n        const offsetTop = item.element.offsetTop; // const { left: offsetLeft, top: offsetTop } = getJQueryLeftAndTop(item.element);\n\n        const {\n          width,\n          height\n        } = getElementWidthAndHeight(item.element);\n        window = {\n          left: windowLeft + offsetLeft,\n          top: windowTop + offsetTop,\n          width,\n          height\n        };\n      }\n\n      const itemConfig = item.toConfig();\n      item.remove();\n\n      if (!ResolvedRootItemConfig.isRootItemConfig(itemConfig)) {\n        throw new Error(`${i18nStrings[0\n        /* PopoutCannotBeCreatedWithGroundItemConfig */\n        ]}`);\n      } else {\n        return this.createPopoutFromItemConfig(itemConfig, window, parentId, indexInParent);\n      }\n    }\n  }\n  /** @internal */\n\n\n  beginVirtualSizedContainerAdding() {\n    if (++this._virtualSizedContainerAddingBeginCount === 0) {\n      this._virtualSizedContainers.length = 0;\n    }\n  }\n  /** @internal */\n\n\n  addVirtualSizedContainer(container) {\n    this._virtualSizedContainers.push(container);\n  }\n  /** @internal */\n\n\n  endVirtualSizedContainerAdding() {\n    if (--this._virtualSizedContainerAddingBeginCount === 0) {\n      const count = this._virtualSizedContainers.length;\n\n      if (count > 0) {\n        this.fireBeforeVirtualRectingEvent(count);\n\n        for (let i = 0; i < count; i++) {\n          const container = this._virtualSizedContainers[i];\n          container.notifyVirtualRectingRequired();\n        }\n\n        this.fireAfterVirtualRectingEvent();\n        this._virtualSizedContainers.length = 0;\n      }\n    }\n  }\n  /** @internal */\n\n\n  fireBeforeVirtualRectingEvent(count) {\n    if (this.beforeVirtualRectingEvent !== undefined) {\n      this.beforeVirtualRectingEvent(count);\n    }\n  }\n  /** @internal */\n\n\n  fireAfterVirtualRectingEvent() {\n    if (this.afterVirtualRectingEvent !== undefined) {\n      this.afterVirtualRectingEvent();\n    }\n  }\n  /** @internal */\n\n\n  createPopoutFromItemConfig(rootItemConfig, window, parentId, indexInParent) {\n    const layoutConfig = this.toConfig();\n    const popoutLayoutConfig = {\n      root: rootItemConfig,\n      openPopouts: [],\n      settings: layoutConfig.settings,\n      dimensions: layoutConfig.dimensions,\n      header: layoutConfig.header,\n      window,\n      parentId,\n      indexInParent,\n      resolved: true\n    };\n    return this.createPopoutFromPopoutLayoutConfig(popoutLayoutConfig);\n  }\n  /** @internal */\n\n\n  createPopoutFromPopoutLayoutConfig(config) {\n    var _a, _b, _c, _d;\n\n    const configWindow = config.window;\n    const initialWindow = {\n      left: (_a = configWindow.left) !== null && _a !== void 0 ? _a : globalThis.screenX || globalThis.screenLeft + 20,\n      top: (_b = configWindow.top) !== null && _b !== void 0 ? _b : globalThis.screenY || globalThis.screenTop + 20,\n      width: (_c = configWindow.width) !== null && _c !== void 0 ? _c : 500,\n      height: (_d = configWindow.height) !== null && _d !== void 0 ? _d : 309\n    };\n    const browserPopout = new BrowserPopout(config, initialWindow, this);\n    browserPopout.on('initialised', () => this.emit('windowOpened', browserPopout));\n    browserPopout.on('closed', () => this.reconcilePopoutWindows());\n\n    this._openPopouts.push(browserPopout);\n\n    return browserPopout;\n  }\n\n  newDragSource(element, componentTypeOrItemConfigCallback, componentState, title) {\n    const dragSource = new DragSource(this, element, [], componentTypeOrItemConfigCallback, componentState, title);\n\n    this._dragSources.push(dragSource);\n\n    return dragSource;\n  }\n  /**\n   * Removes a DragListener added by createDragSource() so the corresponding\n   * DOM element is not a drag source any more.\n   */\n\n\n  removeDragSource(dragSource) {\n    removeFromArray(dragSource, this._dragSources);\n    dragSource.destroy();\n  }\n  /** @internal */\n\n\n  startComponentDrag(x, y, dragListener, componentItem, stack) {\n    new DragProxy(x, y, dragListener, this, componentItem, stack);\n  }\n  /**\n   * Programmatically focuses an item. This focuses the specified component item\n   * and the item emits a focus event\n   *\n   * @param item - The component item to be focused\n   * @param suppressEvent - Whether to emit focus event\n   */\n\n\n  focusComponent(item, suppressEvent = false) {\n    item.focus(suppressEvent);\n  }\n  /**\n   * Programmatically blurs (defocuses) the currently focused component.\n   * If a component item is focused, then it is blurred and and the item emits a blur event\n   *\n   * @param item - The component item to be blurred\n   * @param suppressEvent - Whether to emit blur event\n   */\n\n\n  clearComponentFocus(suppressEvent = false) {\n    this.setFocusedComponentItem(undefined, suppressEvent);\n  }\n  /**\n   * Programmatically focuses a component item or removes focus (blurs) from an existing focused component item.\n   *\n   * @param item - If defined, specifies the component item to be given focus.  If undefined, clear component focus.\n   * @param suppressEvents - Whether to emit focus and blur events\n   * @internal\n   */\n\n\n  setFocusedComponentItem(item, suppressEvents = false) {\n    if (item !== this._focusedComponentItem) {\n      let newFocusedParentItem;\n\n      if (item === undefined) {\n        newFocusedParentItem === undefined;\n      } else {\n        newFocusedParentItem = item.parentItem;\n      }\n\n      if (this._focusedComponentItem !== undefined) {\n        const oldFocusedItem = this._focusedComponentItem;\n        this._focusedComponentItem = undefined;\n        oldFocusedItem.setBlurred(suppressEvents);\n        const oldFocusedParentItem = oldFocusedItem.parentItem;\n\n        if (newFocusedParentItem === oldFocusedParentItem) {\n          newFocusedParentItem = undefined;\n        } else {\n          oldFocusedParentItem.setFocusedValue(false);\n        }\n      }\n\n      if (item !== undefined) {\n        this._focusedComponentItem = item;\n        item.setFocused(suppressEvents);\n\n        if (newFocusedParentItem !== undefined) {\n          newFocusedParentItem.setFocusedValue(true);\n        }\n      }\n    }\n  }\n  /** @internal */\n\n\n  createContentItemFromConfig(config, parent) {\n    switch (config.type) {\n      case ItemType.ground:\n        throw new AssertError('LMCCIFC68871');\n\n      case ItemType.row:\n        return new RowOrColumn(false, this, config, parent);\n\n      case ItemType.column:\n        return new RowOrColumn(true, this, config, parent);\n\n      case ItemType.stack:\n        return new Stack(this, config, parent);\n\n      case ItemType.component:\n        return new ComponentItem(this, config, parent);\n\n      default:\n        throw new UnreachableCaseError('CCC913564', config.type, 'Invalid Config Item type specified');\n    }\n  }\n  /**\n   * This should only be called from stack component.\n   * Stack will look after docking processing associated with maximise/minimise\n   * @internal\n   **/\n\n\n  setMaximisedStack(stack) {\n    if (stack === undefined) {\n      if (this._maximisedStack !== undefined) {\n        this.processMinimiseMaximisedStack();\n      }\n    } else {\n      if (stack !== this._maximisedStack) {\n        if (this._maximisedStack !== undefined) {\n          this.processMinimiseMaximisedStack();\n        }\n\n        this.processMaximiseStack(stack);\n      }\n    }\n  }\n\n  checkMinimiseMaximisedStack() {\n    if (this._maximisedStack !== undefined) {\n      this._maximisedStack.minimise();\n    }\n  } // showAllActiveContentItems() was called from ContentItem.show().  Not sure what its purpose was so have commented out\n  // Everything seems to work ok without this.  Have left commented code just in case there was a reason for it becomes\n  // apparent\n  // /** @internal */\n  // showAllActiveContentItems(): void {\n  //     const allStacks = this.getAllStacks();\n  //     for (let i = 0; i < allStacks.length; i++) {\n  //         const stack = allStacks[i];\n  //         const activeContentItem = stack.getActiveComponentItem();\n  //         if (activeContentItem !== undefined) {\n  //             if (!(activeContentItem instanceof ComponentItem)) {\n  //                 throw new AssertError('LMSAACIS22298');\n  //             } else {\n  //                 activeContentItem.container.show();\n  //             }\n  //         }\n  //     }\n  // }\n  // hideAllActiveContentItems() was called from ContentItem.hide().  Not sure what its purpose was so have commented out\n  // Everything seems to work ok without this.  Have left commented code just in case there was a reason for it becomes\n  // apparent\n  // /** @internal */\n  // hideAllActiveContentItems(): void {\n  //     const allStacks = this.getAllStacks();\n  //     for (let i = 0; i < allStacks.length; i++) {\n  //         const stack = allStacks[i];\n  //         const activeContentItem = stack.getActiveComponentItem();\n  //         if (activeContentItem !== undefined) {\n  //             if (!(activeContentItem instanceof ComponentItem)) {\n  //                 throw new AssertError('LMSAACIH22298');\n  //             } else {\n  //                 activeContentItem.container.hide();\n  //             }\n  //         }\n  //     }\n  // }\n\n  /** @internal */\n\n\n  cleanupBeforeMaximisedStackDestroyed(event) {\n    if (this._maximisedStack !== null && this._maximisedStack === event.target) {\n      this._maximisedStack.off('beforeItemDestroyed', this._maximisedStackBeforeDestroyedListener);\n\n      this._maximisedStack = undefined;\n    }\n  }\n  /**\n   * This method is used to get around sandboxed iframe restrictions.\n   * If 'allow-top-navigation' is not specified in the iframe's 'sandbox' attribute\n   * (as is the case with codepens) the parent window is forbidden from calling certain\n   * methods on the child, such as window.close() or setting document.location.href.\n   *\n   * This prevented GoldenLayout popouts from popping in in codepens. The fix is to call\n   * _$closeWindow on the child window's gl instance which (after a timeout to disconnect\n   * the invoking method from the close call) closes itself.\n   *\n   * @internal\n   */\n\n\n  closeWindow() {\n    globalThis.setTimeout(() => globalThis.close(), 1);\n  }\n  /** @internal */\n\n\n  getArea(x, y) {\n    let matchingArea = null;\n    let smallestSurface = Infinity;\n\n    for (let i = 0; i < this._itemAreas.length; i++) {\n      const area = this._itemAreas[i];\n\n      if (x > area.x1 && x < area.x2 && y > area.y1 && y < area.y2 && smallestSurface > area.surface) {\n        smallestSurface = area.surface;\n        matchingArea = area;\n      }\n    }\n\n    return matchingArea;\n  }\n  /** @internal */\n\n\n  calculateItemAreas() {\n    const allContentItems = this.getAllContentItems();\n    /**\n     * If the last item is dragged out, highlight the entire container size to\n     * allow to re-drop it. this.ground.contentiItems.length === 0 at this point\n     *\n     * Don't include ground into the possible drop areas though otherwise since it\n     * will used for every gap in the layout, e.g. splitters\n     */\n\n    const groundItem = this._groundItem;\n\n    if (groundItem === undefined) {\n      throw new UnexpectedUndefinedError('LMCIAR44365');\n    } else {\n      if (allContentItems.length === 1) {\n        // No root ContentItem (just Ground ContentItem)\n        const groundArea = groundItem.getElementArea();\n\n        if (groundArea === null) {\n          throw new UnexpectedNullError('LMCIARA44365');\n        } else {\n          this._itemAreas = [groundArea];\n        }\n\n        return;\n      } else {\n        if (groundItem.contentItems[0].isStack) {\n          // if root is Stack, then split stack and sides of Layout are same, so skip sides\n          this._itemAreas = [];\n        } else {\n          // sides of layout\n          this._itemAreas = groundItem.createSideAreas();\n        }\n\n        for (let i = 0; i < allContentItems.length; i++) {\n          const stack = allContentItems[i];\n\n          if (ContentItem.isStack(stack)) {\n            const area = stack.getArea();\n\n            if (area === null) {\n              continue;\n            } else {\n              this._itemAreas.push(area);\n\n              const stackContentAreaDimensions = stack.contentAreaDimensions;\n\n              if (stackContentAreaDimensions === undefined) {\n                throw new UnexpectedUndefinedError('LMCIASC45599');\n              } else {\n                const highlightArea = stackContentAreaDimensions.header.highlightArea;\n                const surface = (highlightArea.x2 - highlightArea.x1) * (highlightArea.y2 - highlightArea.y1);\n                const header = {\n                  x1: highlightArea.x1,\n                  x2: highlightArea.x2,\n                  y1: highlightArea.y1,\n                  y2: highlightArea.y2,\n                  contentItem: stack,\n                  surface\n                };\n\n                this._itemAreas.push(header);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Called as part of loading a new layout (including initial init()).\n   * Checks to see layout has a maximised item. If so, it maximises that item.\n   * @internal\n   */\n\n\n  checkLoadedLayoutMaximiseItem() {\n    if (this._groundItem === undefined) {\n      throw new UnexpectedUndefinedError('LMCLLMI43432');\n    } else {\n      const configMaximisedItems = this._groundItem.getConfigMaximisedItems();\n\n      if (configMaximisedItems.length > 0) {\n        let item = configMaximisedItems[0];\n\n        if (ContentItem.isComponentItem(item)) {\n          const stack = item.parent;\n\n          if (stack === null) {\n            throw new UnexpectedNullError('LMXLLMI69999');\n          } else {\n            item = stack;\n          }\n        }\n\n        if (!ContentItem.isStack(item)) {\n          throw new AssertError('LMCLLMI19993');\n        } else {\n          item.maximise();\n        }\n      }\n    }\n  }\n  /** @internal */\n\n\n  processMaximiseStack(stack) {\n    this._maximisedStack = stack;\n    stack.on('beforeItemDestroyed', this._maximisedStackBeforeDestroyedListener);\n    stack.element.classList.add(\"lm_maximised\"\n    /* Maximised */\n    );\n    stack.element.insertAdjacentElement('afterend', this._maximisePlaceholder);\n\n    if (this._groundItem === undefined) {\n      throw new UnexpectedUndefinedError('LMMXI19993');\n    } else {\n      this._groundItem.element.prepend(stack.element);\n\n      const {\n        width,\n        height\n      } = getElementWidthAndHeight(this._containerElement);\n      setElementWidth(stack.element, width);\n      setElementHeight(stack.element, height);\n      stack.updateSize();\n      stack.focusActiveContentItem();\n\n      this._maximisedStack.emit('maximised');\n\n      this.emit('stateChanged');\n    }\n  }\n  /** @internal */\n\n\n  processMinimiseMaximisedStack() {\n    if (this._maximisedStack === undefined) {\n      throw new AssertError('LMMMS74422');\n    } else {\n      const stack = this._maximisedStack;\n\n      if (stack.parent === null) {\n        throw new UnexpectedNullError('LMMI13668');\n      } else {\n        stack.element.classList.remove(\"lm_maximised\"\n        /* Maximised */\n        );\n\n        this._maximisePlaceholder.insertAdjacentElement('afterend', stack.element);\n\n        this._maximisePlaceholder.remove();\n\n        stack.parent.updateSize();\n        this._maximisedStack = undefined;\n        stack.off('beforeItemDestroyed', this._maximisedStackBeforeDestroyedListener);\n        stack.emit('minimised');\n        this.emit('stateChanged');\n      }\n    }\n  }\n  /**\n   * Iterates through the array of open popout windows and removes the ones\n   * that are effectively closed. This is necessary due to the lack of reliably\n   * listening for window.close / unload events in a cross browser compatible fashion.\n   * @internal\n   */\n\n\n  reconcilePopoutWindows() {\n    const openPopouts = [];\n\n    for (let i = 0; i < this._openPopouts.length; i++) {\n      if (this._openPopouts[i].getWindow().closed === false) {\n        openPopouts.push(this._openPopouts[i]);\n      } else {\n        this.emit('windowClosed', this._openPopouts[i]);\n      }\n    }\n\n    if (this._openPopouts.length !== openPopouts.length) {\n      this._openPopouts = openPopouts;\n      this.emit('stateChanged');\n    }\n  }\n  /**\n   * Returns a flattened array of all content items,\n   * regardles of level or type\n   * @internal\n   */\n\n\n  getAllContentItems() {\n    if (this._groundItem === undefined) {\n      throw new UnexpectedUndefinedError('LMGACI13130');\n    } else {\n      return this._groundItem.getAllContentItems();\n    }\n  }\n  /**\n   * Binds to DOM/BOM events on init\n   * @internal\n   */\n\n\n  bindEvents() {\n    if (this._isFullPage) {\n      globalThis.addEventListener('resize', this._windowResizeListener, {\n        passive: true\n      });\n    }\n\n    globalThis.addEventListener('unload', this._windowUnloadListener, {\n      passive: true\n    });\n    globalThis.addEventListener('beforeunload', this._windowUnloadListener, {\n      passive: true\n    });\n  }\n  /**\n   * Creates Subwindows (if there are any). Throws an error\n   * if popouts are blocked.\n   * @internal\n   */\n\n\n  createSubWindows() {\n    for (let i = 0; i < this.layoutConfig.openPopouts.length; i++) {\n      const popoutConfig = this.layoutConfig.openPopouts[i];\n      this.createPopoutFromPopoutLayoutConfig(popoutConfig);\n    }\n  }\n  /**\n   * Debounces resize events\n   * @internal\n   */\n\n\n  processResizeWithDebounce() {\n    if (this._resizeTimeoutId !== undefined) {\n      clearTimeout(this._resizeTimeoutId);\n    }\n\n    this._resizeTimeoutId = setTimeout(() => this.updateSizeFromContainer(), 100);\n  }\n  /**\n   * Determines what element the layout will be created in\n   * @internal\n   */\n\n\n  setContainer() {\n    var _a;\n\n    const bodyElement = document.body;\n    const containerElement = (_a = this._containerElement) !== null && _a !== void 0 ? _a : bodyElement;\n\n    if (containerElement === bodyElement) {\n      this._isFullPage = true;\n      const documentElement = document.documentElement;\n      documentElement.style.height = '100%';\n      documentElement.style.margin = '0';\n      documentElement.style.padding = '0';\n      documentElement.style.overflow = 'hidden';\n      bodyElement.style.height = '100%';\n      bodyElement.style.margin = '0';\n      bodyElement.style.padding = '0';\n      bodyElement.style.overflow = 'hidden';\n    }\n\n    this._containerElement = containerElement;\n  }\n  /**\n   * Called when the window is closed or the user navigates away\n   * from the page\n   * @internal\n   */\n\n\n  onUnload() {\n    this.destroy();\n  }\n  /**\n   * Adjusts the number of columns to be lower to fit the screen and still maintain minItemWidth.\n   * @internal\n   */\n\n\n  adjustColumnsResponsive() {\n    if (this._groundItem === undefined) {\n      throw new UnexpectedUndefinedError('LMACR20883');\n    } else {\n      this._firstLoad = false; // If there is no min width set, or not content items, do nothing.\n\n      if (this.useResponsiveLayout() && !this._updatingColumnsResponsive && this._groundItem.contentItems.length > 0 && this._groundItem.contentItems[0].isRow) {\n        if (this._groundItem === undefined || this._width === null) {\n          throw new UnexpectedUndefinedError('LMACR77412');\n        } else {\n          // If there is only one column, do nothing.\n          const columnCount = this._groundItem.contentItems[0].contentItems.length;\n\n          if (columnCount <= 1) {\n            return;\n          } else {\n            // If they all still fit, do nothing.\n            const minItemWidth = this.layoutConfig.dimensions.minItemWidth;\n            const totalMinWidth = columnCount * minItemWidth;\n\n            if (totalMinWidth <= this._width) {\n              return;\n            } else {\n              // Prevent updates while it is already happening.\n              this._updatingColumnsResponsive = true; // Figure out how many columns to stack, and put them all in the first stack container.\n\n              const finalColumnCount = Math.max(Math.floor(this._width / minItemWidth), 1);\n              const stackColumnCount = columnCount - finalColumnCount;\n              const rootContentItem = this._groundItem.contentItems[0];\n              const allStacks = this.getAllStacks();\n\n              if (allStacks.length === 0) {\n                throw new AssertError('LMACRS77413');\n              } else {\n                const firstStackContainer = allStacks[0];\n\n                for (let i = 0; i < stackColumnCount; i++) {\n                  // Stack from right.\n                  const column = rootContentItem.contentItems[rootContentItem.contentItems.length - 1];\n                  this.addChildContentItemsToContainer(firstStackContainer, column);\n                }\n\n                this._updatingColumnsResponsive = false;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Determines if responsive layout should be used.\n   *\n   * @returns True if responsive layout should be used; otherwise false.\n   * @internal\n   */\n\n\n  useResponsiveLayout() {\n    const settings = this.layoutConfig.settings;\n    const alwaysResponsiveMode = settings.responsiveMode === ResponsiveMode.always;\n    const onLoadResponsiveModeAndFirst = settings.responsiveMode === ResponsiveMode.onload && this._firstLoad;\n    return alwaysResponsiveMode || onLoadResponsiveModeAndFirst;\n  }\n  /**\n   * Adds all children of a node to another container recursively.\n   * @param container - Container to add child content items to.\n   * @param node - Node to search for content items.\n   * @internal\n   */\n\n\n  addChildContentItemsToContainer(container, node) {\n    const contentItems = node.contentItems;\n\n    if (node instanceof Stack) {\n      for (let i = 0; i < contentItems.length; i++) {\n        const item = contentItems[i];\n        node.removeChild(item, true);\n        container.addChild(item);\n      }\n    } else {\n      for (let i = 0; i < contentItems.length; i++) {\n        const item = contentItems[i];\n        this.addChildContentItemsToContainer(container, item);\n      }\n    }\n  }\n  /**\n   * Finds all the stacks.\n   * @returns The found stack containers.\n   * @internal\n   */\n\n\n  getAllStacks() {\n    if (this._groundItem === undefined) {\n      throw new UnexpectedUndefinedError('LMFASC52778');\n    } else {\n      const stacks = [];\n      this.findAllStacksRecursive(stacks, this._groundItem);\n      return stacks;\n    }\n  }\n  /** @internal */\n\n\n  findFirstContentItemType(type) {\n    if (this._groundItem === undefined) {\n      throw new UnexpectedUndefinedError('LMFFCIT82446');\n    } else {\n      return this.findFirstContentItemTypeRecursive(type, this._groundItem);\n    }\n  }\n  /** @internal */\n\n\n  findFirstContentItemTypeRecursive(type, node) {\n    const contentItems = node.contentItems;\n    const contentItemCount = contentItems.length;\n\n    if (contentItemCount === 0) {\n      return undefined;\n    } else {\n      for (let i = 0; i < contentItemCount; i++) {\n        const contentItem = contentItems[i];\n\n        if (contentItem.type === type) {\n          return contentItem;\n        }\n      }\n\n      for (let i = 0; i < contentItemCount; i++) {\n        const contentItem = contentItems[i];\n        const foundContentItem = this.findFirstContentItemTypeRecursive(type, contentItem);\n\n        if (foundContentItem !== undefined) {\n          return foundContentItem;\n        }\n      }\n\n      return undefined;\n    }\n  }\n  /** @internal */\n\n\n  findFirstContentItemTypeByIdRecursive(type, id, node) {\n    const contentItems = node.contentItems;\n    const contentItemCount = contentItems.length;\n\n    if (contentItemCount === 0) {\n      return undefined;\n    } else {\n      for (let i = 0; i < contentItemCount; i++) {\n        const contentItem = contentItems[i];\n\n        if (contentItem.type === type && contentItem.id === id) {\n          return contentItem;\n        }\n      }\n\n      for (let i = 0; i < contentItemCount; i++) {\n        const contentItem = contentItems[i];\n        const foundContentItem = this.findFirstContentItemTypeByIdRecursive(type, id, contentItem);\n\n        if (foundContentItem !== undefined) {\n          return foundContentItem;\n        }\n      }\n\n      return undefined;\n    }\n  }\n  /**\n   * Finds all the stack containers.\n   *\n   * @param stacks - Set of containers to populate.\n   * @param node - Current node to process.\n   * @internal\n   */\n\n\n  findAllStacksRecursive(stacks, node) {\n    const contentItems = node.contentItems;\n\n    for (let i = 0; i < contentItems.length; i++) {\n      const item = contentItems[i];\n\n      if (item instanceof Stack) {\n        stacks.push(item);\n      } else {\n        if (!item.isComponent) {\n          this.findAllStacksRecursive(stacks, item);\n        }\n      }\n    }\n  }\n  /** @internal */\n\n\n  findFirstLocation(selectors) {\n    const count = selectors.length;\n\n    for (let i = 0; i < count; i++) {\n      const selector = selectors[i];\n      const location = this.findLocation(selector);\n\n      if (location !== undefined) {\n        return location;\n      }\n    }\n\n    return undefined;\n  }\n  /** @internal */\n\n\n  findLocation(selector) {\n    const selectorIndex = selector.index;\n\n    switch (selector.typeId) {\n      case 0\n      /* FocusedItem */\n      :\n        {\n          if (this._focusedComponentItem === undefined) {\n            return undefined;\n          } else {\n            const parentItem = this._focusedComponentItem.parentItem;\n            const parentContentItems = parentItem.contentItems;\n            const parentContentItemCount = parentContentItems.length;\n\n            if (selectorIndex === undefined) {\n              return {\n                parentItem,\n                index: parentContentItemCount\n              };\n            } else {\n              const focusedIndex = parentContentItems.indexOf(this._focusedComponentItem);\n              const index = focusedIndex + selectorIndex;\n\n              if (index < 0 || index > parentContentItemCount) {\n                return undefined;\n              } else {\n                return {\n                  parentItem,\n                  index\n                };\n              }\n            }\n          }\n        }\n\n      case 1\n      /* FocusedStack */\n      :\n        {\n          if (this._focusedComponentItem === undefined) {\n            return undefined;\n          } else {\n            const parentItem = this._focusedComponentItem.parentItem;\n            return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n          }\n        }\n\n      case 2\n      /* FirstStack */\n      :\n        {\n          const parentItem = this.findFirstContentItemType(ItemType.stack);\n\n          if (parentItem === undefined) {\n            return undefined;\n          } else {\n            return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n          }\n        }\n\n      case 3\n      /* FirstRowOrColumn */\n      :\n        {\n          let parentItem = this.findFirstContentItemType(ItemType.row);\n\n          if (parentItem !== undefined) {\n            return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n          } else {\n            parentItem = this.findFirstContentItemType(ItemType.column);\n\n            if (parentItem !== undefined) {\n              return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n            } else {\n              return undefined;\n            }\n          }\n        }\n\n      case 4\n      /* FirstRow */\n      :\n        {\n          const parentItem = this.findFirstContentItemType(ItemType.row);\n\n          if (parentItem === undefined) {\n            return undefined;\n          } else {\n            return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n          }\n        }\n\n      case 5\n      /* FirstColumn */\n      :\n        {\n          const parentItem = this.findFirstContentItemType(ItemType.column);\n\n          if (parentItem === undefined) {\n            return undefined;\n          } else {\n            return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n          }\n        }\n\n      case 6\n      /* Empty */\n      :\n        {\n          if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMFLRIF18244');\n          } else {\n            if (this.rootItem !== undefined) {\n              return undefined;\n            } else {\n              if (selectorIndex === undefined || selectorIndex === 0) return {\n                parentItem: this._groundItem,\n                index: 0\n              };else {\n                return undefined;\n              }\n            }\n          }\n        }\n\n      case 7\n      /* Root */\n      :\n        {\n          if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMFLF18244');\n          } else {\n            const groundContentItems = this._groundItem.contentItems;\n\n            if (groundContentItems.length === 0) {\n              if (selectorIndex === undefined || selectorIndex === 0) return {\n                parentItem: this._groundItem,\n                index: 0\n              };else {\n                return undefined;\n              }\n            } else {\n              const parentItem = groundContentItems[0];\n              return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n            }\n          }\n        }\n    }\n  }\n  /** @internal */\n\n\n  tryCreateLocationFromParentItem(parentItem, selectorIndex) {\n    const parentContentItems = parentItem.contentItems;\n    const parentContentItemCount = parentContentItems.length;\n\n    if (selectorIndex === undefined) {\n      return {\n        parentItem,\n        index: parentContentItemCount\n      };\n    } else {\n      if (selectorIndex < 0 || selectorIndex > parentContentItemCount) {\n        return undefined;\n      } else {\n        return {\n          parentItem,\n          index: selectorIndex\n        };\n      }\n    }\n  }\n\n}\n/** @public */\n\n(function (LayoutManager) {\n  /** @internal */\n  function createMaximisePlaceElement(document) {\n    const element = document.createElement('div');\n    element.classList.add(\"lm_maximise_place\"\n    /* MaximisePlace */\n    );\n    return element;\n  }\n\n  LayoutManager.createMaximisePlaceElement = createMaximisePlaceElement;\n  /** @internal */\n\n  function createTabDropPlaceholderElement(document) {\n    const element = document.createElement('div');\n    element.classList.add(\"lm_drop_tab_placeholder\"\n    /* DropTabPlaceholder */\n    );\n    return element;\n  }\n\n  LayoutManager.createTabDropPlaceholderElement = createTabDropPlaceholderElement;\n  /**\n   * Default LocationSelectors array used if none is specified.  Will always find a location.\n   * @public\n   */\n\n  LayoutManager.defaultLocationSelectors = [{\n    typeId: 1\n    /* FocusedStack */\n    ,\n    index: undefined\n  }, {\n    typeId: 2\n    /* FirstStack */\n    ,\n    index: undefined\n  }, {\n    typeId: 3\n    /* FirstRowOrColumn */\n    ,\n    index: undefined\n  }, {\n    typeId: 7\n    /* Root */\n    ,\n    index: undefined\n  }];\n  /**\n   * LocationSelectors to try to get location next to existing focused item\n   * @public\n   */\n\n  LayoutManager.afterFocusedItemIfPossibleLocationSelectors = [{\n    typeId: 0\n    /* FocusedItem */\n    ,\n    index: 1\n  }, {\n    typeId: 2\n    /* FirstStack */\n    ,\n    index: undefined\n  }, {\n    typeId: 3\n    /* FirstRowOrColumn */\n    ,\n    index: undefined\n  }, {\n    typeId: 7\n    /* Root */\n    ,\n    index: undefined\n  }];\n})(LayoutManager || (LayoutManager = {}));","map":{"version":3,"mappings":"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","names":["ItemConfig","LayoutConfig","ResolvedItemConfig","ResolvedLayoutConfig","ResolvedRootItemConfig","BrowserPopout","DragProxy","DragSource","DropTargetIndicator","TransitionIndicator","ConfigurationError","AssertError","UnexpectedNullError","UnexpectedUndefinedError","UnreachableCaseError","ComponentItem","ContentItem","GroundItem","RowOrColumn","Stack","ConfigMinifier","EventEmitter","EventHub","I18nStrings","i18nStrings","ItemType","ResponsiveMode","getElementWidthAndHeight","removeFromArray","setElementHeight","setElementWidth","LayoutManager","constructor","parameters","undefined","createMaximisePlaceElement","document","createTabDropPlaceholderElement","processResizeWithDebounce","onUnload","ev","cleanupBeforeMaximisedStackDestroyed","isSubWindow","_constructorOrSubWindowLayoutConfig","constructorOrSubWindowLayoutConfig","checkInitialise","containerElement","_containerElement","container","isInitialised","_isInitialised","groundItem","_groundItem","root","openPopouts","_openPopouts","dropTargetIndicator","_dropTargetIndicator","transitionIndicator","_transitionIndicator","width","_width","height","_height","eventHub","_eventHub","rootItem","Error","groundContentItems","contentItems","length","focusedComponentItem","_focusedComponentItem","tabDropPlaceholder","_tabDropPlaceholder","maximisedStack","_maximisedStack","deprecatedConstructor","destroy","layoutConfig","settings","closePopoutsOnUnload","i","close","_isFullPage","globalThis","removeEventListener","_windowResizeListener","_windowUnloadListener","remove","dragSource","_dragSources","minifyConfig","config","unminifyConfig","init","setContainer","updateSizeFromContainer","subWindowRootConfig","isComponent","resolvedLayoutConfig","resolve","Object","createDefault","checkLoadedLayoutMaximiseItem","bindEvents","adjustColumnsResponsive","emit","loadComponentAsRoot","loadLayout","createSubWindows","loadRoot","saveLayout","groundContent","calculateConfigContent","rootItemConfig","reconcilePopoutWindows","push","toConfig","Settings","createCopy","dimensions","Dimensions","header","Header","resolved","clear","clearRoot","newComponent","componentType","componentState","title","componentItem","newComponentAtLocation","locationSelectors","location","addComponentAtLocation","createdItem","parentItem","index","isComponentItem","addComponent","itemConfig","type","addItemAtLocation","newItem","contentItem","newItemAtLocation","addItem","defaultLocationSelectors","findFirstLocation","addIdx","ground","row","column","rowOrColumn","stack","component","item","isStack","updateSize","setSize","element","updateRootSize","createAndInitContentItem","parent","createContentItem","JSON","stringify","stackConfig","content","minWidth","minHeight","id","maximised","isClosable","activeItemIndex","createContentItemFromConfig","findFirstComponentItemById","findFirstContentItemTypeByIdRecursive","createPopout","itemConfigOrContentItem","positionAndSize","parentId","indexInParent","createPopoutFromContentItem","createPopoutFromItemConfig","window","child","isGround","indexOf","addPopInParentId","windowLeft","screenX","screenLeft","windowTop","screenY","screenTop","offsetLeft","offsetTop","left","top","isRootItemConfig","beginVirtualSizedContainerAdding","_virtualSizedContainerAddingBeginCount","_virtualSizedContainers","addVirtualSizedContainer","endVirtualSizedContainerAdding","count","fireBeforeVirtualRectingEvent","notifyVirtualRectingRequired","fireAfterVirtualRectingEvent","beforeVirtualRectingEvent","afterVirtualRectingEvent","popoutLayoutConfig","createPopoutFromPopoutLayoutConfig","configWindow","initialWindow","_a","_b","_c","_d","browserPopout","on","newDragSource","componentTypeOrItemConfigCallback","removeDragSource","startComponentDrag","x","y","dragListener","focusComponent","suppressEvent","focus","clearComponentFocus","setFocusedComponentItem","suppressEvents","newFocusedParentItem","oldFocusedItem","setBlurred","oldFocusedParentItem","setFocusedValue","setFocused","setMaximisedStack","processMinimiseMaximisedStack","processMaximiseStack","checkMinimiseMaximisedStack","minimise","event","target","off","_maximisedStackBeforeDestroyedListener","closeWindow","setTimeout","getArea","matchingArea","smallestSurface","Infinity","_itemAreas","area","x1","x2","y1","y2","surface","calculateItemAreas","allContentItems","getAllContentItems","groundArea","getElementArea","createSideAreas","stackContentAreaDimensions","contentAreaDimensions","highlightArea","configMaximisedItems","getConfigMaximisedItems","maximise","classList","add","insertAdjacentElement","_maximisePlaceholder","prepend","focusActiveContentItem","getWindow","closed","addEventListener","passive","popoutConfig","_resizeTimeoutId","clearTimeout","bodyElement","body","documentElement","style","margin","padding","overflow","_firstLoad","useResponsiveLayout","_updatingColumnsResponsive","isRow","columnCount","minItemWidth","totalMinWidth","finalColumnCount","Math","max","floor","stackColumnCount","rootContentItem","allStacks","getAllStacks","firstStackContainer","addChildContentItemsToContainer","alwaysResponsiveMode","responsiveMode","always","onLoadResponsiveModeAndFirst","onload","node","removeChild","addChild","stacks","findAllStacksRecursive","findFirstContentItemType","findFirstContentItemTypeRecursive","contentItemCount","foundContentItem","selectors","selector","findLocation","selectorIndex","typeId","parentContentItems","parentContentItemCount","focusedIndex","tryCreateLocationFromParentItem","createElement"],"sourceRoot":"","sources":["../../../src/ts/layout-manager.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}