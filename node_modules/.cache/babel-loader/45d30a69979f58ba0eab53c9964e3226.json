{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"full-height\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  style: {\n    \"margin\": \"0\"\n  }\n}, \"Golden Layout Demo\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"width\": \"20px\",\n    \"display\": \"inline-block\"\n  }\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"width\": \"20px\",\n    \"display\": \"inline-block\"\n  }\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"width\": \"20px\",\n    \"display\": \"inline-block\"\n  }\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    id: \"nav\",\n    style: {\n      \"height\": \"90px\"\n    }\n  }, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: $setup.onClickInitLayoutMinRow\n  }, \"Init Layout MinRow\"), _hoisted_3, _createElementVNode(\"button\", {\n    onClick: $setup.onClickAddGLComponent1\n  }, \" Add Simple Component \"), _createElementVNode(\"button\", {\n    onClick: $setup.onClickAddGLComponent2\n  }, \" Add Widest Component \"), _createElementVNode(\"button\", {\n    onClick: $setup.onClickAddGLComponent3\n  }, \" Add Highest Component \"), _hoisted_4, _createElementVNode(\"button\", {\n    onClick: $setup.onClickSaveLayout\n  }, \"Save Layout\"), _hoisted_5, _createElementVNode(\"button\", {\n    onClick: $setup.onClickLoadLayout\n  }, \"Load Layout\")]), _createVNode($setup[\"Glayout\"], {\n    ref: \"GLayoutRoot\",\n    \"glc-path\": \"./\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"calc(100% - 90px)\"\n    }\n  }, null, 512\n  /* NEED_PATCH */\n  )]);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;gCAEHC,oBAA6C,IAA7C,EAA6C;AAAzCC,OAAiB,EAAjB;AAAA;AAAA;AAAyC,CAA7C,EAAsB,oBAAtB,EAAwC;AAAA;AAAxC;;gCAEAD,oBAAsD,KAAtD,EAAsD;AAAjDC,OAA0C,EAA1C;AAAA;AAAA;AAAA;AAAiD,CAAtD,EAA+C,IAA/C,EAA+C;AAAA;AAA/C;;gCAUAD,oBAAsD,KAAtD,EAAsD;AAAjDC,OAA0C,EAA1C;AAAA;AAAA;AAAA;AAAiD,CAAtD,EAA+C,IAA/C,EAA+C;AAAA;AAA/C;;gCAEAD,oBAAsD,KAAtD,EAAsD;AAAjDC,OAA0C,EAA1C;AAAA;AAAA;AAAA;AAAiD,CAAtD,EAA+C,IAA/C,EAA+C;AAAA;AAA/C;;;uBAhBRC,oBAwBM,KAxBN,cAwBM,CAvBFF,oBAiBM,KAjBN,EAiBM;AAjBDG,MAAE,EAAC,KAiBF;AAjBQF,SAAoB,EAApB;AAAA;AAAA;AAiBR,GAjBN,GACIG,YACAJ,oBAAoE,QAApE,EAAoE;AAA3DK,WAAK,EAAEC;AAAoD,GAApE,EAAyC,oBAAzC,GACAC,YACAP,oBAES,QAFT,EAES;AAFAK,WAAK,EAAEC;AAEP,GAFT,EAAwC,wBAAxC,GAGAN,oBAES,QAFT,EAES;AAFAK,WAAK,EAAEC;AAEP,GAFT,EAAwC,wBAAxC,GAGAN,oBAES,QAFT,EAES;AAFAK,WAAK,EAAEC;AAEP,GAFT,EAAwC,yBAAxC,GAGAE,YACAR,oBAAuD,QAAvD,EAAuD;AAA9CK,WAAK,EAAEC;AAAuC,GAAvD,EAAmC,aAAnC,GACAG,YACAT,oBAAuD,QAAvD,EAAuD;AAA9CK,WAAK,EAAEC;AAAuC,GAAvD,EAAmC,aAAnC,EAhBJ,CAuBE,EALFI,aAIWJ,iBAJX,EAIW;AAHPK,OAAG,EAAC,aAGG;AAFP,gBAAS,IAEF;AADPV,SAA8C,EAA9C;AAAA;AAAA;AAAA;AACO,GAJX;;AAAA,GAKE,CAxBN","names":["class","_createElementVNode","style","_createElementBlock","id","_hoisted_2","onClick","$setup","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","ref"],"sourceRoot":"","sources":["/Users/mengxia/Documents/ctat_vue3/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"full-height\">\n        <div id=\"nav\" style=\"height: 90px\">\n            <h1 style=\"margin: 0\">Golden Layout Demo</h1>\n            <button @click=\"onClickInitLayoutMinRow\">Init Layout MinRow</button>\n            <div style=\"width: 20px; display: inline-block\"></div>\n            <button @click=\"onClickAddGLComponent1\">\n                Add Simple Component\n            </button>\n            <button @click=\"onClickAddGLComponent2\">\n                Add Widest Component\n            </button>\n            <button @click=\"onClickAddGLComponent3\">\n                Add Highest Component\n            </button>\n            <div style=\"width: 20px; display: inline-block\"></div>\n            <button @click=\"onClickSaveLayout\">Save Layout</button>\n            <div style=\"width: 20px; display: inline-block\"></div>\n            <button @click=\"onClickLoadLayout\">Load Layout</button>\n        </div>\n        <glayout\n            ref=\"GLayoutRoot\"\n            glc-path=\"./\"\n            style=\"width: 100%; height: calc(100% - 90px)\"\n        ></glayout>\n    </div>\n</template>\n\n<script setup>\nimport Glayout from \"@/components/Glayout.vue\";\nimport { ref } from \"vue\";\nimport { prefinedLayouts } from \"./predefined-layouts\";\nimport \"golden-layout/dist/css/goldenlayout-base.css\";\nimport \"golden-layout/dist/css/themes/goldenlayout-dark-theme.css\";\n\nconst GLayoutRoot = ref(null);\n\nconst onClickInitLayoutMinRow = () => {\n    if (!GLayoutRoot.value) return;\n    GLayoutRoot.value.loadGLLayout(prefinedLayouts.miniRow);\n};\n\nconst onClickAddGLComponent1 = () => {\n    if (!GLayoutRoot.value) return;\n    GLayoutRoot.value.addGLComponent(\"Content1\", \"Title 1st\");\n};\n\nconst onClickAddGLComponent2 = () => {\n    if (!GLayoutRoot.value) return;\n    GLayoutRoot.value.addGLComponent(\"Content2\", \"I'm wide\");\n};\n\nconst onClickAddGLComponent3 = () => {\n    if (!GLayoutRoot.value) return;\n    GLayoutRoot.value.addGLComponent(\"Content3\", \"I'm high\");\n};\n\nconst onClickSaveLayout = () => {\n    if (!GLayoutRoot.value) return;\n    const config = GLayoutRoot.value.getLayoutConfig();\n    localStorage.setItem(\"gl_config\", JSON.stringify(config));\n};\n\nconst onClickLoadLayout = () => {\n    const str = localStorage.getItem(\"gl_config\");\n    if (!str) return;\n    if (!GLayoutRoot.value) return;\n    const config = JSON.parse(str);\n    GLayoutRoot.value.loadGLLayout(config);\n};\n</script>\n\n<style>\nhtml {\n    height: 100%;\n}\nbody {\n    height: 100%;\n    margin: 0;\n    overflow: hidden;\n}\n.full-height, #app {\n    height: 100%;\n}\n#app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n#nav {\n    text-align: center;\n}\n</style>\n\n<style src=\"golden-layout/dist/css/goldenlayout-base.css\"></style>\n<style src=\"golden-layout/dist/css/themes/goldenlayout-dark-theme.css\"></style>\n"]},"metadata":{},"sourceType":"module"}