{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/**\n * A generic and very fast EventEmitter implementation. On top of emitting the actual event it emits an\n * {@link (EventEmitter:namespace).ALL_EVENT} event for every event triggered. This allows to hook into it and proxy events forwards\n * @public\n */\nexport class EventEmitter {\n  constructor() {\n    /** @internal */\n    this._allEventSubscriptions = [];\n    /** @internal */\n\n    this._subscriptionsMap = new Map();\n    /**\n     * Alias for off\n     */\n\n    this.unbind = this.removeEventListener;\n    /**\n     * Alias for emit\n     */\n\n    this.trigger = this.emit;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  tryBubbleEvent(name, args) {// overridden by ContentItem\n  }\n  /**\n   * Emit an event and notify listeners\n   *\n   * @param eventName - The name of the event\n   * @param args - Additional arguments that will be passed to the listener\n   */\n\n\n  emit(eventName, ...args) {\n    let subcriptions = this._subscriptionsMap.get(eventName);\n\n    if (subcriptions !== undefined) {\n      subcriptions = subcriptions.slice();\n\n      for (let i = 0; i < subcriptions.length; i++) {\n        const subscription = subcriptions[i];\n        subscription(...args);\n      }\n    }\n\n    this.emitAllEvent(eventName, args);\n    this.tryBubbleEvent(eventName, args);\n  }\n  /** @internal */\n\n\n  emitUnknown(eventName, ...args) {\n    let subs = this._subscriptionsMap.get(eventName);\n\n    if (subs !== undefined) {\n      subs = subs.slice();\n\n      for (let i = 0; i < subs.length; i++) {\n        subs[i](...args);\n      }\n    }\n\n    this.emitAllEvent(eventName, args);\n    this.tryBubbleEvent(eventName, args);\n  }\n  /* @internal **/\n\n\n  emitBaseBubblingEvent(eventName) {\n    const event = new EventEmitter.BubblingEvent(eventName, this);\n    this.emitUnknown(eventName, event);\n  }\n  /** @internal */\n\n\n  emitUnknownBubblingEvent(eventName) {\n    const event = new EventEmitter.BubblingEvent(eventName, this);\n    this.emitUnknown(eventName, event);\n  }\n  /**\n   * Removes a listener for an event.\n   * @param eventName - The name of the event\n   * @param callback - The previously registered callback method (optional)\n   */\n\n\n  removeEventListener(eventName, callback) {\n    const unknownCallback = callback;\n    this.removeUnknownEventListener(eventName, unknownCallback);\n  }\n\n  off(eventName, callback) {\n    this.removeEventListener(eventName, callback);\n  }\n  /**\n   * Listen for events\n   *\n   * @param eventName - The name of the event to listen to\n   * @param callback - The callback to execute when the event occurs\n   */\n\n\n  addEventListener(eventName, callback) {\n    const unknownCallback = callback;\n    this.addUnknownEventListener(eventName, unknownCallback);\n  }\n\n  on(eventName, callback) {\n    this.addEventListener(eventName, callback);\n  }\n  /** @internal */\n\n\n  addUnknownEventListener(eventName, callback) {\n    if (eventName === EventEmitter.ALL_EVENT) {\n      this._allEventSubscriptions.push(callback);\n    } else {\n      let subscriptions = this._subscriptionsMap.get(eventName);\n\n      if (subscriptions !== undefined) {\n        subscriptions.push(callback);\n      } else {\n        subscriptions = [callback];\n\n        this._subscriptionsMap.set(eventName, subscriptions);\n      }\n    }\n  }\n  /** @internal */\n\n\n  removeUnknownEventListener(eventName, callback) {\n    if (eventName === EventEmitter.ALL_EVENT) {\n      this.removeSubscription(eventName, this._allEventSubscriptions, callback);\n    } else {\n      const subscriptions = this._subscriptionsMap.get(eventName);\n\n      if (subscriptions === undefined) {\n        throw new Error('No subscribtions to unsubscribe for event ' + eventName);\n      } else {\n        this.removeSubscription(eventName, subscriptions, callback);\n      }\n    }\n  }\n  /** @internal */\n\n\n  removeSubscription(eventName, subscriptions, callback) {\n    const idx = subscriptions.indexOf(callback);\n\n    if (idx < 0) {\n      throw new Error('Nothing to unbind for ' + eventName);\n    } else {\n      subscriptions.splice(idx, 1);\n    }\n  }\n  /** @internal */\n\n\n  emitAllEvent(eventName, args) {\n    const allEventSubscriptionsCount = this._allEventSubscriptions.length;\n\n    if (allEventSubscriptionsCount > 0) {\n      const unknownArgs = args.slice();\n      unknownArgs.unshift(eventName);\n\n      const allEventSubcriptions = this._allEventSubscriptions.slice();\n\n      for (let i = 0; i < allEventSubscriptionsCount; i++) {\n        allEventSubcriptions[i](...unknownArgs);\n      }\n    }\n  }\n\n}\n/** @public */\n\n(function (EventEmitter) {\n  /**\n   * The name of the event that's triggered for every event\n   */\n  EventEmitter.ALL_EVENT = '__all';\n  EventEmitter.headerClickEventName = 'stackHeaderClick';\n  EventEmitter.headerTouchStartEventName = 'stackHeaderTouchStart';\n\n  class BubblingEvent {\n    /** @internal */\n    constructor(\n    /** @internal */\n    _name,\n    /** @internal */\n    _target) {\n      this._name = _name;\n      this._target = _target;\n      /** @internal */\n\n      this._isPropagationStopped = false;\n    }\n\n    get name() {\n      return this._name;\n    }\n\n    get target() {\n      return this._target;\n    }\n    /** @deprecated Use {@link (EventEmitter:namespace).(BubblingEvent:class).target} instead */\n\n\n    get origin() {\n      return this._target;\n    }\n\n    get isPropagationStopped() {\n      return this._isPropagationStopped;\n    }\n\n    stopPropagation() {\n      this._isPropagationStopped = true;\n    }\n\n  }\n\n  EventEmitter.BubblingEvent = BubblingEvent;\n\n  class ClickBubblingEvent extends BubblingEvent {\n    /** @internal */\n    constructor(name, target,\n    /** @internal */\n    _mouseEvent) {\n      super(name, target);\n      this._mouseEvent = _mouseEvent;\n    }\n\n    get mouseEvent() {\n      return this._mouseEvent;\n    }\n\n  }\n\n  EventEmitter.ClickBubblingEvent = ClickBubblingEvent;\n\n  class TouchStartBubblingEvent extends BubblingEvent {\n    /** @internal */\n    constructor(name, target,\n    /** @internal */\n    _touchEvent) {\n      super(name, target);\n      this._touchEvent = _touchEvent;\n    }\n\n    get touchEvent() {\n      return this._touchEvent;\n    }\n\n  }\n\n  EventEmitter.TouchStartBubblingEvent = TouchStartBubblingEvent;\n})(EventEmitter || (EventEmitter = {}));","map":{"version":3,"mappings":"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","names":["EventEmitter","constructor","Map","removeEventListener","emit","tryBubbleEvent","name","args","eventName","subcriptions","_subscriptionsMap","get","undefined","slice","i","length","subscription","emitAllEvent","emitUnknown","subs","emitBaseBubblingEvent","event","BubblingEvent","emitUnknownBubblingEvent","callback","unknownCallback","removeUnknownEventListener","off","addEventListener","addUnknownEventListener","on","ALL_EVENT","_allEventSubscriptions","push","subscriptions","set","removeSubscription","Error","idx","indexOf","splice","allEventSubscriptionsCount","unknownArgs","unshift","allEventSubcriptions","_name","_target","target","origin","isPropagationStopped","_isPropagationStopped","stopPropagation","ClickBubblingEvent","_mouseEvent","mouseEvent","TouchStartBubblingEvent","_touchEvent","touchEvent"],"sourceRoot":"","sources":["../../../../src/ts/utils/event-emitter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}