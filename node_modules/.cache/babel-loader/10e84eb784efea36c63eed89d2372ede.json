{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { AssertError } from '../errors/internal-error';\nimport { numberToPixels, pixelsToNumber } from '../utils/utils';\nimport { Tab } from './tab';\n/** @internal */\n\nexport class TabsContainer {\n  constructor(_layoutManager, _componentRemoveEvent, _componentFocusEvent, _componentDragStartEvent, _dropdownActiveChangedEvent) {\n    this._layoutManager = _layoutManager;\n    this._componentRemoveEvent = _componentRemoveEvent;\n    this._componentFocusEvent = _componentFocusEvent;\n    this._componentDragStartEvent = _componentDragStartEvent;\n    this._dropdownActiveChangedEvent = _dropdownActiveChangedEvent; // There is one tab per ComponentItem in stack.  However they may not be ordered the same\n\n    this._tabs = [];\n    this._lastVisibleTabIndex = -1;\n    this._dropdownActive = false;\n    this._element = document.createElement('section');\n\n    this._element.classList.add(\"lm_tabs\"\n    /* Tabs */\n    );\n\n    this._dropdownElement = document.createElement('section');\n\n    this._dropdownElement.classList.add(\"lm_tabdropdown_list\"\n    /* TabDropdownList */\n    );\n\n    this._dropdownElement.style.display = 'none';\n  }\n\n  get tabs() {\n    return this._tabs;\n  }\n\n  get tabCount() {\n    return this._tabs.length;\n  }\n\n  get lastVisibleTabIndex() {\n    return this._lastVisibleTabIndex;\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  get dropdownElement() {\n    return this._dropdownElement;\n  }\n\n  get dropdownActive() {\n    return this._dropdownActive;\n  }\n\n  destroy() {\n    for (let i = 0; i < this._tabs.length; i++) {\n      this._tabs[i].destroy();\n    }\n  }\n  /**\n   * Creates a new tab and associates it with a contentItem\n   * @param index - The position of the tab\n   */\n\n\n  createTab(componentItem, index) {\n    //If there's already a tab relating to the\n    //content item, don't do anything\n    for (let i = 0; i < this._tabs.length; i++) {\n      if (this._tabs[i].componentItem === componentItem) {\n        return;\n      }\n    }\n\n    const tab = new Tab(this._layoutManager, componentItem, item => this.handleTabCloseEvent(item), item => this.handleTabFocusEvent(item), (x, y, dragListener, item) => this.handleTabDragStartEvent(x, y, dragListener, item));\n\n    if (this._tabs.length === 0) {\n      this._tabs.push(tab);\n\n      this._element.appendChild(tab.element);\n    } else {\n      if (index === undefined) {\n        index = this._tabs.length;\n      }\n\n      if (index > 0) {\n        this._tabs[index - 1].element.insertAdjacentElement('afterend', tab.element);\n      } else {\n        this._tabs[0].element.insertAdjacentElement('beforebegin', tab.element);\n      }\n\n      this._tabs.splice(index, 0, tab);\n    }\n  }\n\n  removeTab(componentItem) {\n    // componentItem cannot be ActiveComponentItem\n    for (let i = 0; i < this._tabs.length; i++) {\n      if (this._tabs[i].componentItem === componentItem) {\n        const tab = this._tabs[i];\n        tab.destroy();\n\n        this._tabs.splice(i, 1);\n\n        return;\n      }\n    }\n\n    throw new Error('contentItem is not controlled by this header');\n  }\n\n  processActiveComponentChanged(newActiveComponentItem) {\n    let activeIndex = -1;\n\n    for (let i = 0; i < this._tabs.length; i++) {\n      const isActive = this._tabs[i].componentItem === newActiveComponentItem;\n\n      this._tabs[i].setActive(isActive);\n\n      if (isActive) {\n        activeIndex = i;\n      }\n    }\n\n    if (activeIndex < 0) {\n      throw new AssertError('HSACI56632');\n    } else {\n      if (this._layoutManager.layoutConfig.settings.reorderOnTabMenuClick) {\n        /**\n         * If the tab selected was in the dropdown, move everything down one to make way for this one to be the first.\n         * This will make sure the most used tabs stay visible.\n         */\n        if (this._lastVisibleTabIndex !== -1 && activeIndex > this._lastVisibleTabIndex) {\n          const activeTab = this._tabs[activeIndex];\n\n          for (let j = activeIndex; j > 0; j--) {\n            this._tabs[j] = this._tabs[j - 1];\n          }\n\n          this._tabs[0] = activeTab; // updateTabSizes will always be called after this and it will reposition tab elements\n        }\n      }\n    }\n  }\n  /**\n   * Pushes the tabs to the tab dropdown if the available space is not sufficient\n   */\n\n\n  updateTabSizes(availableWidth, activeComponentItem) {\n    let dropDownActive = false;\n    const success = this.tryUpdateTabSizes(dropDownActive, availableWidth, activeComponentItem);\n\n    if (!success) {\n      dropDownActive = true; // this will always succeed\n\n      this.tryUpdateTabSizes(dropDownActive, availableWidth, activeComponentItem);\n    }\n\n    if (dropDownActive !== this._dropdownActive) {\n      this._dropdownActive = dropDownActive;\n\n      this._dropdownActiveChangedEvent();\n    }\n  }\n\n  tryUpdateTabSizes(dropdownActive, availableWidth, activeComponentItem) {\n    if (this._tabs.length > 0) {\n      if (activeComponentItem === undefined) {\n        throw new Error('non-empty tabs must have active component item');\n      }\n\n      let cumulativeTabWidth = 0;\n      let tabOverlapAllowanceExceeded = false;\n      const tabOverlapAllowance = this._layoutManager.layoutConfig.settings.tabOverlapAllowance;\n\n      const activeIndex = this._tabs.indexOf(activeComponentItem.tab);\n\n      const activeTab = this._tabs[activeIndex];\n      this._lastVisibleTabIndex = -1;\n\n      for (let i = 0; i < this._tabs.length; i++) {\n        const tabElement = this._tabs[i].element; //Put the tab in the tabContainer so its true width can be checked\n\n        if (tabElement.parentElement !== this._element) {\n          this._element.appendChild(tabElement);\n        }\n\n        const tabMarginRightPixels = getComputedStyle(activeTab.element).marginRight;\n        const tabMarginRight = pixelsToNumber(tabMarginRightPixels);\n        const tabWidth = tabElement.offsetWidth + tabMarginRight;\n        cumulativeTabWidth += tabWidth; //Include the active tab's width if it isn't already\n        //This is to ensure there is room to show the active tab\n\n        let visibleTabWidth = 0;\n\n        if (activeIndex <= i) {\n          visibleTabWidth = cumulativeTabWidth;\n        } else {\n          const activeTabMarginRightPixels = getComputedStyle(activeTab.element).marginRight;\n          const activeTabMarginRight = pixelsToNumber(activeTabMarginRightPixels);\n          visibleTabWidth = cumulativeTabWidth + activeTab.element.offsetWidth + activeTabMarginRight;\n        } // If the tabs won't fit, check the overlap allowance.\n\n\n        if (visibleTabWidth > availableWidth) {\n          //Once allowance is exceeded, all remaining tabs go to menu.\n          if (!tabOverlapAllowanceExceeded) {\n            //No overlap for first tab or active tab\n            //Overlap spreads among non-active, non-first tabs\n            let overlap;\n\n            if (activeIndex > 0 && activeIndex <= i) {\n              overlap = (visibleTabWidth - availableWidth) / (i - 1);\n            } else {\n              overlap = (visibleTabWidth - availableWidth) / i;\n            } //Check overlap against allowance.\n\n\n            if (overlap < tabOverlapAllowance) {\n              for (let j = 0; j <= i; j++) {\n                const marginLeft = j !== activeIndex && j !== 0 ? '-' + numberToPixels(overlap) : '';\n                this._tabs[j].element.style.zIndex = numberToPixels(i - j);\n                this._tabs[j].element.style.marginLeft = marginLeft;\n              }\n\n              this._lastVisibleTabIndex = i;\n\n              if (tabElement.parentElement !== this._element) {\n                this._element.appendChild(tabElement);\n              }\n            } else {\n              tabOverlapAllowanceExceeded = true;\n            }\n          } else if (i === activeIndex) {\n            //Active tab should show even if allowance exceeded. (We left room.)\n            tabElement.style.zIndex = 'auto';\n            tabElement.style.marginLeft = '';\n\n            if (tabElement.parentElement !== this._element) {\n              this._element.appendChild(tabElement);\n            }\n          }\n\n          if (tabOverlapAllowanceExceeded && i !== activeIndex) {\n            if (dropdownActive) {\n              //Tab menu already shown, so we just add to it.\n              tabElement.style.zIndex = 'auto';\n              tabElement.style.marginLeft = '';\n\n              if (tabElement.parentElement !== this._dropdownElement) {\n                this._dropdownElement.appendChild(tabElement);\n              }\n            } else {\n              //We now know the tab menu must be shown, so we have to recalculate everything.\n              return false;\n            }\n          }\n        } else {\n          this._lastVisibleTabIndex = i;\n          tabElement.style.zIndex = 'auto';\n          tabElement.style.marginLeft = '';\n\n          if (tabElement.parentElement !== this._element) {\n            this._element.appendChild(tabElement);\n          }\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Shows drop down for additional tabs when there are too many to display.\n   */\n\n\n  showAdditionalTabsDropdown() {\n    this._dropdownElement.style.display = '';\n  }\n  /**\n   * Hides drop down for additional tabs when there are too many to display.\n   */\n\n\n  hideAdditionalTabsDropdown() {\n    this._dropdownElement.style.display = 'none';\n  }\n\n  handleTabCloseEvent(componentItem) {\n    this._componentRemoveEvent(componentItem);\n  }\n\n  handleTabFocusEvent(componentItem) {\n    this._componentFocusEvent(componentItem);\n  }\n\n  handleTabDragStartEvent(x, y, dragListener, componentItem) {\n    this._componentDragStartEvent(x, y, dragListener, componentItem);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["AssertError","numberToPixels","pixelsToNumber","Tab","TabsContainer","constructor","_layoutManager","_componentRemoveEvent","_componentFocusEvent","_componentDragStartEvent","_dropdownActiveChangedEvent","_element","document","createElement","classList","add","_dropdownElement","style","display","tabs","_tabs","tabCount","length","lastVisibleTabIndex","_lastVisibleTabIndex","element","dropdownElement","dropdownActive","_dropdownActive","destroy","i","createTab","componentItem","index","tab","item","handleTabCloseEvent","handleTabFocusEvent","x","y","dragListener","handleTabDragStartEvent","push","appendChild","undefined","insertAdjacentElement","splice","removeTab","Error","processActiveComponentChanged","newActiveComponentItem","activeIndex","isActive","setActive","layoutConfig","settings","reorderOnTabMenuClick","activeTab","j","updateTabSizes","availableWidth","activeComponentItem","dropDownActive","success","tryUpdateTabSizes","cumulativeTabWidth","tabOverlapAllowanceExceeded","tabOverlapAllowance","indexOf","tabElement","parentElement","tabMarginRightPixels","getComputedStyle","marginRight","tabMarginRight","tabWidth","offsetWidth","visibleTabWidth","activeTabMarginRightPixels","activeTabMarginRight","overlap","marginLeft","zIndex","showAdditionalTabsDropdown","hideAdditionalTabsDropdown"],"sourceRoot":"","sources":["../../../../src/ts/controls/tabs-container.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}