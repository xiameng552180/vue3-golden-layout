{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { ComponentItemConfig, ItemConfig } from '../config/config';\nimport { AssertError, UnexpectedNullError } from '../errors/internal-error';\nimport { EventEmitter } from '../utils/event-emitter';\nimport { StyleConstants } from '../utils/style-constants';\nimport { LogicalZIndex } from '../utils/types';\nimport { deepExtend, setElementHeight, setElementWidth } from '../utils/utils';\n/** @public */\n\nexport class ComponentContainer extends EventEmitter {\n  /** @internal */\n  constructor(\n  /** @internal */\n  _config,\n  /** @internal */\n  _parent,\n  /** @internal */\n  _layoutManager,\n  /** @internal */\n  _element,\n  /** @internal */\n  _updateItemConfigEvent,\n  /** @internal */\n  _showEvent,\n  /** @internal */\n  _hideEvent,\n  /** @internal */\n  _focusEvent,\n  /** @internal */\n  _blurEvent) {\n    super();\n    this._config = _config;\n    this._parent = _parent;\n    this._layoutManager = _layoutManager;\n    this._element = _element;\n    this._updateItemConfigEvent = _updateItemConfigEvent;\n    this._showEvent = _showEvent;\n    this._hideEvent = _hideEvent;\n    this._focusEvent = _focusEvent;\n    this._blurEvent = _blurEvent;\n    /** @internal */\n\n    this._stackMaximised = false;\n    this._width = 0;\n    this._height = 0;\n    this._visible = true;\n    this._isShownWithZeroDimensions = true;\n    this._componentType = _config.componentType;\n    this._isClosable = _config.isClosable;\n    this._initialState = _config.componentState;\n    this._state = this._initialState;\n    this._boundComponent = this.layoutManager.bindComponent(this, _config);\n    this.updateElementPositionPropertyFromBoundComponent();\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  get parent() {\n    return this._parent;\n  }\n  /** @internal @deprecated use {@link (ComponentContainer:class).componentType} */\n\n\n  get componentName() {\n    return this._componentType;\n  }\n\n  get componentType() {\n    return this._componentType;\n  }\n\n  get virtual() {\n    return this._boundComponent.virtual;\n  }\n\n  get component() {\n    return this._boundComponent.component;\n  }\n\n  get tab() {\n    return this._tab;\n  }\n\n  get title() {\n    return this._parent.title;\n  }\n\n  get layoutManager() {\n    return this._layoutManager;\n  }\n\n  get isHidden() {\n    return !this._visible;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  get state() {\n    return this._state;\n  }\n  /** Return the initial component state */\n\n\n  get initialState() {\n    return this._initialState;\n  }\n  /** The inner DOM element where the container's content is intended to live in */\n\n\n  get element() {\n    return this._element;\n  }\n  /** @internal */\n\n\n  destroy() {\n    this.releaseComponent();\n    this.stateRequestEvent = undefined;\n    this.emit('destroy');\n  }\n  /** @deprecated use {@link (ComponentContainer:class).element } */\n\n\n  getElement() {\n    return this._element;\n  }\n  /**\n   * Hides the container's component item (and hence, the container) if not already hidden.\n   * Emits hide event prior to hiding the container.\n   */\n\n\n  hide() {\n    this._hideEvent();\n  }\n  /**\n   * Shows the container's component item (and hence, the container) if not visible.\n   * Emits show event prior to hiding the container.\n   */\n\n\n  show() {\n    this._showEvent();\n  }\n  /**\n   * Focus this component in Layout.\n   */\n\n\n  focus(suppressEvent = false) {\n    this._focusEvent(suppressEvent);\n  }\n  /**\n   * Remove focus from this component in Layout.\n   */\n\n\n  blur(suppressEvent = false) {\n    this._blurEvent(suppressEvent);\n  }\n  /**\n   * Set the size from within the container. Traverses up\n   * the item tree until it finds a row or column element\n   * and resizes its items accordingly.\n   *\n   * If this container isn't a descendant of a row or column\n   * it returns false\n   * @param width - The new width in pixel\n   * @param height - The new height in pixel\n   *\n   * @returns resizeSuccesful\n   *\n   * @internal\n   */\n\n\n  setSize(width, height) {\n    let ancestorItem = this._parent;\n\n    if (ancestorItem.isColumn || ancestorItem.isRow || ancestorItem.parent === null) {\n      throw new AssertError('ICSSPRC', 'ComponentContainer cannot have RowColumn Parent');\n    } else {\n      let ancestorChildItem;\n\n      do {\n        ancestorChildItem = ancestorItem;\n        ancestorItem = ancestorItem.parent;\n      } while (ancestorItem !== null && !ancestorItem.isColumn && !ancestorItem.isRow);\n\n      if (ancestorItem === null) {\n        // no Row or Column found\n        return false;\n      } else {\n        // ancestorItem is Row or Column\n        const direction = ancestorItem.isColumn ? 'height' : 'width';\n        const currentSize = this[direction];\n\n        if (currentSize === null) {\n          throw new UnexpectedNullError('ICSSCS11194');\n        } else {\n          const newSize = direction === 'height' ? height : width;\n          const totalPixel = currentSize * (1 / (ancestorChildItem[direction] / 100));\n          const percentage = newSize / totalPixel * 100;\n          const delta = (ancestorChildItem[direction] - percentage) / (ancestorItem.contentItems.length - 1);\n\n          for (let i = 0; i < ancestorItem.contentItems.length; i++) {\n            if (ancestorItem.contentItems[i] === ancestorChildItem) {\n              ancestorItem.contentItems[i][direction] = percentage;\n            } else {\n              ancestorItem.contentItems[i][direction] += delta;\n            }\n          }\n\n          ancestorItem.updateSize();\n          return true;\n        }\n      }\n    }\n  }\n  /**\n   * Closes the container if it is closable. Can be called by\n   * both the component within at as well as the contentItem containing\n   * it. Emits a close event before the container itself is closed.\n   */\n\n\n  close() {\n    if (this._isClosable) {\n      this.emit('close');\n\n      this._parent.close();\n    }\n  }\n  /** Replaces component without affecting layout */\n\n\n  replaceComponent(itemConfig) {\n    this.releaseComponent();\n\n    if (!ItemConfig.isComponent(itemConfig)) {\n      throw new Error('ReplaceComponent not passed a component ItemConfig');\n    } else {\n      const config = ComponentItemConfig.resolve(itemConfig);\n      this._initialState = config.componentState;\n      this._state = this._initialState;\n      this._componentType = config.componentType;\n\n      this._updateItemConfigEvent(config);\n\n      this._boundComponent = this.layoutManager.bindComponent(this, config);\n      this.updateElementPositionPropertyFromBoundComponent();\n\n      if (this._boundComponent.virtual) {\n        if (this.virtualVisibilityChangeRequiredEvent !== undefined) {\n          this.virtualVisibilityChangeRequiredEvent(this, this._visible);\n        }\n\n        if (this.virtualRectingRequiredEvent !== undefined) {\n          this._layoutManager.fireBeforeVirtualRectingEvent(1);\n\n          try {\n            this.virtualRectingRequiredEvent(this, this._width, this._height);\n          } finally {\n            this._layoutManager.fireAfterVirtualRectingEvent();\n          }\n        }\n\n        if (this.virtualZIndexChangeRequiredEvent !== undefined) {\n          this.virtualZIndexChangeRequiredEvent(this, LogicalZIndex.base, StyleConstants.defaultComponentBaseZIndex);\n        }\n      }\n\n      this.emit('stateChanged');\n    }\n  }\n  /**\n   * Returns the initial component state or the latest passed in setState()\n   * @returns state\n   * @deprecated Use {@link (ComponentContainer:class).initialState}\n   */\n\n\n  getState() {\n    return this._state;\n  }\n  /**\n   * Merges the provided state into the current one\n   * @deprecated Use {@link (ComponentContainer:class).stateRequestEvent}\n   */\n\n\n  extendState(state) {\n    const extendedState = deepExtend(this._state, state);\n    this.setState(extendedState);\n  }\n  /**\n   * Sets the component state\n   * @deprecated Use {@link (ComponentContainer:class).stateRequestEvent}\n   */\n\n\n  setState(state) {\n    this._state = state;\n\n    this._parent.emitBaseBubblingEvent('stateChanged');\n  }\n  /**\n   * Set's the components title\n   */\n\n\n  setTitle(title) {\n    this._parent.setTitle(title);\n  }\n  /** @internal */\n\n\n  setTab(tab) {\n    this._tab = tab;\n    this.emit('tab', tab);\n  }\n  /** @internal */\n\n\n  setVisibility(value) {\n    if (this._boundComponent.virtual) {\n      if (this.virtualVisibilityChangeRequiredEvent !== undefined) {\n        this.virtualVisibilityChangeRequiredEvent(this, value);\n      }\n    }\n\n    if (value) {\n      if (!this._visible) {\n        this._visible = true;\n\n        if (this._height === 0 && this._width === 0) {\n          this._isShownWithZeroDimensions = true;\n        } else {\n          this._isShownWithZeroDimensions = false;\n          this.setSizeToNodeSize(this._width, this._height, true);\n          this.emitShow();\n        }\n      } else {\n        if (this._isShownWithZeroDimensions && (this._height !== 0 || this._width !== 0)) {\n          this._isShownWithZeroDimensions = false;\n          this.setSizeToNodeSize(this._width, this._height, true);\n          this.emitShow();\n        }\n      }\n    } else {\n      if (this._visible) {\n        this._visible = false;\n        this._isShownWithZeroDimensions = false;\n        this.emitHide();\n      }\n    }\n  }\n  /**\n   * Set the container's size, but considered temporary (for dragging)\n   * so don't emit any events.\n   * @internal\n   */\n\n\n  enterDragMode(width, height) {\n    this._width = width;\n    this._height = height;\n    setElementWidth(this._element, width);\n    setElementHeight(this._element, height);\n\n    if (this.virtualZIndexChangeRequiredEvent !== undefined) {\n      this.virtualZIndexChangeRequiredEvent(this, LogicalZIndex.drag, StyleConstants.defaultComponentDragZIndex);\n    }\n\n    this.drag();\n  }\n  /** @internal */\n\n\n  exitDragMode() {\n    if (this.virtualZIndexChangeRequiredEvent !== undefined) {\n      this.virtualZIndexChangeRequiredEvent(this, LogicalZIndex.base, StyleConstants.defaultComponentBaseZIndex);\n    }\n  }\n  /** @internal */\n\n\n  enterStackMaximised() {\n    this._stackMaximised = true;\n\n    if (this.virtualZIndexChangeRequiredEvent !== undefined) {\n      this.virtualZIndexChangeRequiredEvent(this, LogicalZIndex.stackMaximised, StyleConstants.defaultComponentStackMaximisedZIndex);\n    }\n  }\n  /** @internal */\n\n\n  exitStackMaximised() {\n    if (this.virtualZIndexChangeRequiredEvent !== undefined) {\n      this.virtualZIndexChangeRequiredEvent(this, LogicalZIndex.base, StyleConstants.defaultComponentBaseZIndex);\n    }\n\n    this._stackMaximised = false;\n  }\n  /** @internal */\n\n\n  drag() {\n    if (this._boundComponent.virtual) {\n      if (this.virtualRectingRequiredEvent !== undefined) {\n        this._layoutManager.fireBeforeVirtualRectingEvent(1);\n\n        try {\n          this.virtualRectingRequiredEvent(this, this._width, this._height);\n        } finally {\n          this._layoutManager.fireAfterVirtualRectingEvent();\n        }\n      }\n    }\n  }\n  /**\n   * Sets the container's size. Called by the container's component item.\n   * To instead set the size programmatically from within the component itself,\n   * use the public setSize method\n   * @param width - in px\n   * @param height - in px\n   * @param force - set even if no change\n   * @internal\n   */\n\n\n  setSizeToNodeSize(width, height, force) {\n    if (width !== this._width || height !== this._height || force) {\n      this._width = width;\n      this._height = height;\n      setElementWidth(this._element, width);\n      setElementHeight(this._element, height);\n\n      if (this._boundComponent.virtual) {\n        this.addVirtualSizedContainerToLayoutManager();\n      } else {\n        this.emit('resize');\n        this.checkShownFromZeroDimensions();\n      }\n    }\n  }\n  /** @internal */\n\n\n  notifyVirtualRectingRequired() {\n    if (this.virtualRectingRequiredEvent !== undefined) {\n      this.virtualRectingRequiredEvent(this, this._width, this._height);\n      this.emit('resize');\n      this.checkShownFromZeroDimensions();\n    }\n  }\n  /** @internal */\n\n\n  updateElementPositionPropertyFromBoundComponent() {\n    if (this._boundComponent.virtual) {\n      this._element.style.position = 'static';\n    } else {\n      this._element.style.position = ''; // set it back to attribute value\n    }\n  }\n  /** @internal */\n\n\n  addVirtualSizedContainerToLayoutManager() {\n    this._layoutManager.beginVirtualSizedContainerAdding();\n\n    try {\n      this._layoutManager.addVirtualSizedContainer(this);\n    } finally {\n      this._layoutManager.endVirtualSizedContainerAdding();\n    }\n  }\n  /** @internal */\n\n\n  checkShownFromZeroDimensions() {\n    if (this._isShownWithZeroDimensions && (this._height !== 0 || this._width !== 0)) {\n      this._isShownWithZeroDimensions = false;\n      this.emitShow();\n    }\n  }\n  /** @internal */\n\n\n  emitShow() {\n    this.emit('shown');\n    this.emit('show');\n  }\n  /** @internal */\n\n\n  emitHide() {\n    this.emit('hide');\n  }\n  /** @internal */\n\n\n  releaseComponent() {\n    if (this._stackMaximised) {\n      this.exitStackMaximised();\n    }\n\n    this.emit('beforeComponentRelease', this._boundComponent.component);\n    this.layoutManager.unbindComponent(this, this._boundComponent.virtual, this._boundComponent.component);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["ComponentItemConfig","ItemConfig","AssertError","UnexpectedNullError","EventEmitter","StyleConstants","LogicalZIndex","deepExtend","setElementHeight","setElementWidth","ComponentContainer","constructor","_config","_parent","_layoutManager","_element","_updateItemConfigEvent","_showEvent","_hideEvent","_focusEvent","_blurEvent","_width","_height","_visible","_isShownWithZeroDimensions","_componentType","componentType","_isClosable","isClosable","_initialState","componentState","_state","_boundComponent","layoutManager","bindComponent","updateElementPositionPropertyFromBoundComponent","width","height","parent","componentName","virtual","component","tab","_tab","title","isHidden","visible","state","initialState","element","destroy","releaseComponent","stateRequestEvent","undefined","emit","getElement","hide","show","focus","suppressEvent","blur","setSize","ancestorItem","isColumn","isRow","ancestorChildItem","direction","currentSize","newSize","totalPixel","percentage","delta","contentItems","length","i","updateSize","close","replaceComponent","itemConfig","isComponent","Error","config","resolve","virtualVisibilityChangeRequiredEvent","virtualRectingRequiredEvent","fireBeforeVirtualRectingEvent","fireAfterVirtualRectingEvent","virtualZIndexChangeRequiredEvent","base","defaultComponentBaseZIndex","getState","extendState","extendedState","setState","emitBaseBubblingEvent","setTitle","setTab","setVisibility","value","setSizeToNodeSize","emitShow","emitHide","enterDragMode","drag","defaultComponentDragZIndex","exitDragMode","enterStackMaximised","_stackMaximised","stackMaximised","defaultComponentStackMaximisedZIndex","exitStackMaximised","force","addVirtualSizedContainerToLayoutManager","checkShownFromZeroDimensions","notifyVirtualRectingRequired","style","position","beginVirtualSizedContainerAdding","addVirtualSizedContainer","endVirtualSizedContainerAdding","unbindComponent"],"sourceRoot":"","sources":["../../../../src/ts/container/component-container.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}