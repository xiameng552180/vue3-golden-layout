{"ast":null,"code":"import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"GLComponent\",\n  style: {\n    \"position\": \"absolute\",\n    \"overflow\": \"hidden\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\")], 512\n  /* NEED_PATCH */\n  );\n}","map":{"version":3,"mappings":";;AACSA,KAAG,EAAC;AAAcC,OAA4C,EAA5C;AAAA;AAAA;AAAA;;;uBAAvBC,oBAEM,KAFN,cAEM,CADFC,YAAaC,WAAb,EAAa,SAAb,CACE,CAFN;;AAAA","names":["ref","style","_createElementBlock","_renderSlot","_ctx"],"sourceRoot":"","sources":["/Users/mengxia/Documents/ctat_vue3/src/components/GlComponent.vue"],"sourcesContent":["<template>\n    <div ref=\"GLComponent\" style=\"position: absolute; overflow: hidden\">\n        <slot></slot>\n    </div>\n</template>\n\n<script setup>\nimport { ref, defineExpose } from \"vue\";\n\nconst GLComponent = ref(null);\n\nconst numberToPixels = (value) => {\n    return value.toString(10) + \"px\";\n};\n\nconst setPosAndSize = (\n    left,\n    top,\n    width,\n    height\n) => {\n    if (GLComponent.value) {\n        const el = GLComponent.value;\n        el.style.left = numberToPixels(left);\n        el.style.top = numberToPixels(top);\n        el.style.width = numberToPixels(width);\n        el.style.height = numberToPixels(height);\n    }\n};\n\nconst setVisibility = (visible) => {\n    if (GLComponent.value) {\n        const el = GLComponent.value;\n        if (visible) {\n            el.style.display = \"\";\n        } else {\n            el.style.display = \"none\";\n        }\n    }\n};\n\nconst setZIndex = (value) => {\n    if (GLComponent.value) {\n        const el = GLComponent.value;\n        el.style.zIndex = value;\n    }\n};\n\ndefineExpose({\n    setPosAndSize,\n    setVisibility,\n    setZIndex,\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}