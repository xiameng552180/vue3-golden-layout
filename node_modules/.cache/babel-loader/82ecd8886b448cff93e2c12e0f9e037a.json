{"ast":null,"code":"import Glayout from \"@/components/Glayout.vue\";\nimport { ref } from \"vue\";\nimport { prefinedLayouts } from \"./predefined-layouts\";\nimport \"golden-layout/dist/css/goldenlayout-base.css\";\nimport \"golden-layout/dist/css/themes/goldenlayout-dark-theme.css\";\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const GLayoutRoot = ref(null);\n\n    const onClickInitLayoutMinRow = () => {\n      if (!GLayoutRoot.value) return;\n      GLayoutRoot.value.loadGLLayout(prefinedLayouts.miniRow);\n    };\n\n    const onClickAddGLComponent1 = () => {\n      if (!GLayoutRoot.value) return;\n      GLayoutRoot.value.addGLComponent(\"Content1\", \"Title 1st\");\n    };\n\n    const onClickAddGLComponent2 = () => {\n      if (!GLayoutRoot.value) return;\n      GLayoutRoot.value.addGLComponent(\"Content2\", \"I'm wide\");\n    };\n\n    const onClickAddGLComponent3 = () => {\n      if (!GLayoutRoot.value) return;\n      GLayoutRoot.value.addGLComponent(\"Content3\", \"I'm high\");\n    };\n\n    const onClickSaveLayout = () => {\n      if (!GLayoutRoot.value) return;\n      const config = GLayoutRoot.value.getLayoutConfig();\n      localStorage.setItem(\"gl_config\", JSON.stringify(config));\n    };\n\n    const onClickLoadLayout = () => {\n      const str = localStorage.getItem(\"gl_config\");\n      if (!str) return;\n      if (!GLayoutRoot.value) return;\n      const config = JSON.parse(str);\n      GLayoutRoot.value.loadGLLayout(config);\n    };\n\n    const __returned__ = {\n      GLayoutRoot,\n      onClickInitLayoutMinRow,\n      onClickAddGLComponent1,\n      onClickAddGLComponent2,\n      onClickAddGLComponent3,\n      onClickSaveLayout,\n      onClickLoadLayout,\n      Glayout,\n      ref,\n      prefinedLayouts\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AA6BA,OAAOA,OAAP,MAAoB,0BAApB;AACA,SAASC,GAAT,QAAoB,KAApB;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAO,8CAAP;AACA,OAAO,2DAAP;;;;;;AAEA,UAAMC,WAAW,GAAGF,GAAG,CAAC,IAAD,CAAvB;;AAEA,UAAMG,uBAAuB,GAAG,MAAM;AAClC,UAAI,CAACD,WAAW,CAACE,KAAjB,EAAwB;AACxBF,iBAAW,CAACE,KAAZ,CAAkBC,YAAlB,CAA+BJ,eAAe,CAACK,OAA/C;AACH,KAHD;;AAKA,UAAMC,sBAAsB,GAAG,MAAM;AACjC,UAAI,CAACL,WAAW,CAACE,KAAjB,EAAwB;AACxBF,iBAAW,CAACE,KAAZ,CAAkBI,cAAlB,CAAiC,UAAjC,EAA6C,WAA7C;AACH,KAHD;;AAKA,UAAMC,sBAAsB,GAAG,MAAM;AACjC,UAAI,CAACP,WAAW,CAACE,KAAjB,EAAwB;AACxBF,iBAAW,CAACE,KAAZ,CAAkBI,cAAlB,CAAiC,UAAjC,EAA6C,UAA7C;AACH,KAHD;;AAKA,UAAME,sBAAsB,GAAG,MAAM;AACjC,UAAI,CAACR,WAAW,CAACE,KAAjB,EAAwB;AACxBF,iBAAW,CAACE,KAAZ,CAAkBI,cAAlB,CAAiC,UAAjC,EAA6C,UAA7C;AACH,KAHD;;AAKA,UAAMG,iBAAiB,GAAG,MAAM;AAC5B,UAAI,CAACT,WAAW,CAACE,KAAjB,EAAwB;AACxB,YAAMQ,MAAM,GAAGV,WAAW,CAACE,KAAZ,CAAkBS,eAAlB,EAAf;AACAC,kBAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAlC;AACH,KAJD;;AAMA,UAAMM,iBAAiB,GAAG,MAAM;AAC5B,YAAMC,GAAG,GAAGL,YAAY,CAACM,OAAb,CAAqB,WAArB,CAAZ;AACA,UAAI,CAACD,GAAL,EAAU;AACV,UAAI,CAACjB,WAAW,CAACE,KAAjB,EAAwB;AACxB,YAAMQ,MAAM,GAAGI,IAAI,CAACK,KAAL,CAAWF,GAAX,CAAf;AACAjB,iBAAW,CAACE,KAAZ,CAAkBC,YAAlB,CAA+BO,MAA/B;AACH,KAND","names":["Glayout","ref","prefinedLayouts","GLayoutRoot","onClickInitLayoutMinRow","value","loadGLLayout","miniRow","onClickAddGLComponent1","addGLComponent","onClickAddGLComponent2","onClickAddGLComponent3","onClickSaveLayout","config","getLayoutConfig","localStorage","setItem","JSON","stringify","onClickLoadLayout","str","getItem","parse"],"sources":["/Users/mengxia/Documents/ctat_vue3/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"full-height\">\n        <div id=\"nav\" style=\"height: 90px\">\n            <h1 style=\"margin: 0\">Golden Layout Demo</h1>\n            <button @click=\"onClickInitLayoutMinRow\">Init Layout MinRow</button>\n            <div style=\"width: 20px; display: inline-block\"></div>\n            <button @click=\"onClickAddGLComponent1\">\n                Add Simple Component\n            </button>\n            <button @click=\"onClickAddGLComponent2\">\n                Add Widest Component\n            </button>\n            <button @click=\"onClickAddGLComponent3\">\n                Add Highest Component\n            </button>\n            <div style=\"width: 20px; display: inline-block\"></div>\n            <button @click=\"onClickSaveLayout\">Save Layout</button>\n            <div style=\"width: 20px; display: inline-block\"></div>\n            <button @click=\"onClickLoadLayout\">Load Layout</button>\n        </div>\n        <glayout\n            ref=\"GLayoutRoot\"\n            glc-path=\"./\"\n            style=\"width: 100%; height: calc(100% - 90px)\"\n        ></glayout>\n    </div>\n</template>\n\n<script setup>\nimport Glayout from \"@/components/Glayout.vue\";\nimport { ref } from \"vue\";\nimport { prefinedLayouts } from \"./predefined-layouts\";\nimport \"golden-layout/dist/css/goldenlayout-base.css\";\nimport \"golden-layout/dist/css/themes/goldenlayout-dark-theme.css\";\n\nconst GLayoutRoot = ref(null);\n\nconst onClickInitLayoutMinRow = () => {\n    if (!GLayoutRoot.value) return;\n    GLayoutRoot.value.loadGLLayout(prefinedLayouts.miniRow);\n};\n\nconst onClickAddGLComponent1 = () => {\n    if (!GLayoutRoot.value) return;\n    GLayoutRoot.value.addGLComponent(\"Content1\", \"Title 1st\");\n};\n\nconst onClickAddGLComponent2 = () => {\n    if (!GLayoutRoot.value) return;\n    GLayoutRoot.value.addGLComponent(\"Content2\", \"I'm wide\");\n};\n\nconst onClickAddGLComponent3 = () => {\n    if (!GLayoutRoot.value) return;\n    GLayoutRoot.value.addGLComponent(\"Content3\", \"I'm high\");\n};\n\nconst onClickSaveLayout = () => {\n    if (!GLayoutRoot.value) return;\n    const config = GLayoutRoot.value.getLayoutConfig();\n    localStorage.setItem(\"gl_config\", JSON.stringify(config));\n};\n\nconst onClickLoadLayout = () => {\n    const str = localStorage.getItem(\"gl_config\");\n    if (!str) return;\n    if (!GLayoutRoot.value) return;\n    const config = JSON.parse(str);\n    GLayoutRoot.value.loadGLLayout(config);\n};\n</script>\n\n<style>\nhtml {\n    height: 100%;\n}\nbody {\n    height: 100%;\n    margin: 0;\n    overflow: hidden;\n}\n.full-height, #app {\n    height: 100%;\n}\n#app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n#nav {\n    text-align: center;\n}\n</style>\n\n<style src=\"golden-layout/dist/css/goldenlayout-base.css\"></style>\n<style src=\"golden-layout/dist/css/themes/goldenlayout-dark-theme.css\"></style>\n"]},"metadata":{},"sourceType":"module"}